const l=["IN","India"];let n=null;const r=864e5,u=36e5;function i(o){if(!o.timestamp)return console.log("🌍 [locationUtils] Cache has no timestamp, invalid"),!1;const t=Date.now()-o.timestamp;return t>r?(console.log("🌍 [locationUtils] Cache is too old:",Math.round(t/36e5),"hours"),!1):(console.log("🌍 [locationUtils] Cache is valid, age:",Math.round(t/6e4),"minutes"),!0)}async function s(){try{if(n&&i(n))return console.log("🌍 [locationUtils] Using valid cached location:",n),n;const o=localStorage.getItem("user-location");if(o)try{const t=JSON.parse(o);if(i(t))return n=t,console.log("🌍 [locationUtils] Using valid stored location:",t),t;console.log("🌍 [locationUtils] Stored location is invalid, fetching fresh data"),localStorage.removeItem("user-location")}catch(o){console.warn("🌍 [locationUtils] Failed to parse stored location:",o),localStorage.removeItem("user-location")}console.log("🌍 [locationUtils] Fetching fresh location from IP geolocation...");const t=await(await fetch("https://ipapi.co/json/")).json();console.log("🌍 [locationUtils] IP geolocation response:",t);const e={country:t.country_name||"Unknown",countryCode:t.country_code||"US",currency:l.includes(t.country_code)?"INR":"USD",timezone:t.timezone||"UTC",timestamp:Date.now()};return console.log("🌍 [locationUtils] Processed location data:",e),n=e,localStorage.setItem("user-location",JSON.stringify(e)),e}catch(o){console.warn("🌍 [locationUtils] Failed to detect user location:",o);const t=d();return n=t,localStorage.setItem("user-location",JSON.stringify(t)),console.log("🌍 [locationUtils] Using locale fallback:",t),t}}function d(){const o=(navigator.language||"en-US").split("-")[1]||"US";return{country:"IN"===o?"India":"United States",countryCode:o,currency:l.includes(o)?"INR":"USD",timezone:Intl.DateTimeFormat().resolvedOptions().timeZone||"UTC",timestamp:Date.now()}}function f(o){return o>=1e5?`₹${(o/1e5).toFixed(1)}L`:o>=1e3?`₹${(o/1e3).toFixed(0)}K`:`₹${o.toLocaleString()}`}function m(o){return`$${o.toLocaleString()}`}async function g(){return console.log("🌍 [locationUtils] Force refreshing location detection..."),n=null,localStorage.removeItem("user-location"),await s()}function h(){n=null,localStorage.removeItem("user-location"),console.log("🌍 [locationUtils] Location cache cleared")}function U(o){const t={...o,timestamp:Date.now()};n=t,localStorage.setItem("user-location",JSON.stringify(t)),console.log("🌍 [locationUtils] Custom location set:",t)}async function p(){const o=await s();return o.timestamp&&Date.now()-o.timestamp>u&&(console.log("🌍 [locationUtils] Cache is older than validation interval, refreshing in background"),g().then((o=>{console.log("🌍 [locationUtils] Background refresh completed:",o),window.dispatchEvent(new CustomEvent("location-refreshed",{detail:o}))})).catch((o=>{console.warn("🌍 [locationUtils] Background refresh failed:",o)}))),o}export{m as a,g as b,h as c,s as d,f,U as s,p as v};