---
export interface Props {
  data: {
    title: string;
    subtitle: string;
    testimonials: Array<{
      quote: string;
      description: string;
      author: string;
      company: string;
      avatar: string;
    }>;
  };
}

const { data } = Astro.props;
---

<section class="py-20 relative overflow-hidden">
  <div class="container mx-auto max-w-screen-2xl px-4 relative z-10">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-inter font-bold text-graphite-900 mb-4">
        {data.title}
      </h2>
      <p class="text-lg font-inter text-graphite-600 max-w-3xl mx-auto">
        {data.subtitle}
      </p>
    </div>

    <!-- Testimonials Grid -->
    <div class="max-w-6xl mx-auto">
      <div class="grid md:grid-cols-2 gap-8">
        {data.testimonials.map((testimonial, index) => (
          <div 
            class="group relative overflow-hidden rounded-xl transition-all duration-300 hover:scale-105 hover:-translate-y-1"
            data-testimonial={index + 1}
          >
            <!-- Card Background -->
            <div class="absolute inset-0 bg-white/90 backdrop-blur-sm border border-white/30 rounded-xl shadow-sm group-hover:shadow-xl transition-all duration-300"></div>
            
            <!-- Card Content -->
            <div class="relative p-6">
              <!-- Quote Icon -->
              <div class="text-4xl text-mint-100 mb-4 font-inter">
                "
              </div>
              
              <!-- Quote -->
              <blockquote class="text-lg font-inter font-semibold text-graphite-900 mb-4 leading-relaxed">
                {testimonial.quote}
              </blockquote>
              
              <!-- Description -->
              <p class="text-graphite-600 font-inter leading-relaxed mb-6">
                {testimonial.description}
              </p>
              
              <!-- Author -->
              <div class="flex items-center">
                <div class="w-12 h-12 bg-gradient-to-r from-mint-500 to-cerulean-500 rounded-full flex items-center justify-center text-white font-inter font-semibold text-lg mr-4 shadow-md">
                  {testimonial.author.charAt(0)}
                </div>
                <div>
                  <div class="font-inter font-semibold text-graphite-900">
                    {testimonial.author}
                  </div>
                  <div class="text-graphite-600 text-sm font-inter">
                    {testimonial.company}
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

   
  </div>
</section>

<script>
  // Add animation on scroll
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const target = entry.target as HTMLElement;
        const delay = (parseInt(target.getAttribute('data-testimonial') || '1') - 1) * 0.2;
        target.style.animationDelay = `${delay}s`;
        entry.target.classList.add('animate-fade-in-up');
      }
    });
  }, observerOptions);

  // Observe all testimonial cards
  document.querySelectorAll('[data-testimonial]').forEach(card => {
    observer.observe(card);
  });
</script>

<style>
  .animate-fade-in-up {
    animation: fadeInUp 0.6s ease-out forwards;
    opacity: 0;
    transform: translateY(30px);
  }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style> 