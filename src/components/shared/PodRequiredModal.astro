---
// Pod Required Modal Component
---

<div id="pod-required-modal" class="fixed inset-0 bg-black bg-opacity-50 z-[9999] hidden flex items-center justify-center p-4">
  <div class="bg-white rounded-2xl shadow-2xl max-w-md w-full mx-4 transform transition-all duration-300 scale-95 opacity-0" id="modal-content">
    <!-- Header -->
    <div class="flex items-center justify-between p-6 border-b border-gray-200">
      <div class="flex items-center">
        <div class="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mr-3">
          <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>
        <h3 class="text-lg font-semibold text-gray-900">Pod Required</h3>
      </div>
      <button id="close-pod-modal" class="text-gray-400 hover:text-gray-600 transition-colors">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    
    <!-- Content -->
    <div class="p-6">
      <p class="text-gray-600 mb-4">
        To add packs to your cart, you need to select a pod first. Packs are designed to work with specific pods to provide the best results.
      </p>
      
      <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
        <div class="flex items-start">
          <svg class="w-5 h-5 text-blue-600 mt-0.5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <div>
            <h4 class="font-semibold text-blue-900 mb-1">How it works:</h4>
            <ul class="text-sm text-blue-800 space-y-1">
              <li>• First, select a pod that matches your needs</li>
              <li>• Then, add packs to enhance your pod's capabilities</li>
              <li>• Multiple packs can be added to a single pod</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Actions -->
    <div class="flex gap-3 p-6 border-t border-gray-200">
      <button id="browse-pods-btn" class="flex-1 bg-primary-600 text-white py-3 px-4 rounded-xl font-semibold hover:bg-primary-700 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl">
        Browse Pods
      </button>
      <button id="cancel-pod-modal" class="flex-1 border-2 border-primary-600 text-primary-600 py-3 px-4 rounded-xl font-semibold hover:bg-primary-600 hover:text-white transition-all duration-300 transform hover:scale-105 shadow-md hover:shadow-lg">
        Cancel
      </button>
    </div>
  </div>
</div>

<script>
  class PodRequiredModal {
    constructor() {
      this.modal = document.getElementById('pod-required-modal');
      this.modalContent = document.getElementById('modal-content');
      this.init();
    }

    init() {
      this.setupEventListeners();
    }

    setupEventListeners() {
      // Close button
      document.getElementById('close-pod-modal')?.addEventListener('click', () => {
        this.hide();
      });

      // Cancel button
      document.getElementById('cancel-pod-modal')?.addEventListener('click', () => {
        this.hide();
      });

      // Browse pods button
      document.getElementById('browse-pods-btn')?.addEventListener('click', () => {
        this.hide();
        // Navigate to explore pods page
        window.location.href = '/explore-pods';
      });

      // Close on backdrop click
      this.modal?.addEventListener('click', (e) => {
        if (e.target === this.modal) {
          this.hide();
        }
      });

      // Close on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.isVisible()) {
          this.hide();
        }
      });
    }

    show() {
      if (this.modal && this.modalContent) {
        this.modal.classList.remove('hidden');
        this.modal.classList.add('flex');
        
        // Trigger animation
        setTimeout(() => {
          this.modalContent.classList.remove('scale-95', 'opacity-0');
          this.modalContent.classList.add('scale-100', 'opacity-100');
        }, 10);
        
        // Prevent body scroll
        document.body.style.overflow = 'hidden';
      }
    }

    hide() {
      if (this.modal && this.modalContent) {
        this.modalContent.classList.remove('scale-100', 'opacity-100');
        this.modalContent.classList.add('scale-95', 'opacity-0');
        
        setTimeout(() => {
          this.modal.classList.add('hidden');
          this.modal.classList.remove('flex');
        }, 300);
        
        // Restore body scroll
        document.body.style.overflow = '';
      }
    }

    isVisible() {
      return this.modal && !this.modal.classList.contains('hidden');
    }
  }

  // Initialize modal when DOM is ready
  if (typeof window !== 'undefined') {
    window.podRequiredModal = new PodRequiredModal();
  }

  // Global function to show modal
  window.showPodRequiredModal = function() {
    if (window.podRequiredModal) {
      window.podRequiredModal.show();
    }
  };
</script> 