---
import { generatePodSlug } from '../../utils/slugUtils.js';

interface Props {
  pod: {
    id: string;
    title: string;
    description: string;
    price: string;
    priceNote?: string;
    features: string[];
    technologies: string[];
    icon: string;
    badge?: string;
    badgeColor?: string;
  };
  className?: string;
}

const { pod, className = "" } = Astro.props;
const { id, title, description, price, priceNote, features, technologies, icon, badge, badgeColor = "blue" } = pod;
---

<div class="pod-card group relative bg-white rounded-2xl shadow-lg hover:shadow-2xl overflow-hidden flex flex-col h-full animate-fade-in-up">
  <!-- Card Header -->
  <div class="p-6 border-b border-gray-100">
    <div class="flex items-start justify-between mb-4">
      <!-- Icon -->
      <div class="w-12 h-12 bg-gradient-to-br from-[#22c55e] to-[#0ea5e9] rounded-lg flex items-center justify-center">
        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={icon}></path>
        </svg>
      </div>
      
      <!-- Badge -->
      {badge && (
        <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-${badgeColor}-100 text-${badgeColor}-800`}>
          {badge}
        </span>
      )}
    </div>
    
    <!-- Title -->
    <h3 class="font-bold text-lg mb-3 transition-colors duration-300 text-dark group-hover:text-blue-600">
      {title}
    </h3>
    
    <!-- Description -->
    <p class="text-gray-600 leading-relaxed text-sm">
      {description}
    </p>
  </div>

  <!-- Card Body -->
  <div class="p-6 flex-1">
    <!-- Features -->
    {features.length > 0 && (
      <div class="mb-6">
        <h4 class="font-semibold text-sm text-gray-700 mb-3 flex items-center">
          <svg class="w-4 h-4 mr-2 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          Key Features
        </h4>
        <ul class="space-y-2">
          {features.map(feature => (
            <li class="flex items-start text-sm text-gray-600 group/item">
              <svg class="w-4 h-4 mr-2 mt-0.5 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              <span class="group-hover/item:text-gray-800 transition-colors duration-200">{feature}</span>
            </li>
          ))}
        </ul>
      </div>
    )}

    <!-- Technologies -->
    {technologies.length > 0 && (
      <div class="mb-6">
        <h4 class="font-semibold text-sm text-gray-700 mb-3 flex items-center">
          <svg class="w-4 h-4 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
          </svg>
          Technologies
        </h4>
        <div class="flex items-center text-sm text-gray-600">
          <div class="flex flex-wrap gap-2">
            {technologies.slice(0, 3).map(tech => (
              <span class="px-2 py-1 bg-gray-100 text-gray-700 rounded-md text-xs">{tech}</span>
            ))}
            {technologies.length > 3 && (
              <span class="px-2 py-1 bg-gray-100 text-gray-700 rounded-md text-xs">+{technologies.length - 3} more</span>
            )}
          </div>
        </div>
      </div>
    )}
  </div>

  <!-- Card Footer -->
  <div class="mt-auto pt-4 border-t border-gray-100">
    <div class="p-6">
      <div class="flex items-center justify-between mb-4">
        <div>
          <div class="font-bold text-xl text-dark">{price}</div>
          {priceNote && (
            <div class="font-semibold text-xs text-gray-600">{priceNote}</div>
          )}
        </div>
        
        <!-- Add to Cart Button -->
        <button 
          class="add-to-cart-btn px-4 py-2 bg-gradient-to-r from-[#22c55e] to-[#0ea5e9] text-white font-semibold rounded-lg hover:from-[#16a34a] hover:to-[#0284c7] transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
          data-item-id={id}
          data-item-type="pod"
          data-item-title={title}
          data-item-description={description}
          data-item-price={price}
        >
          Add to Cart
        </button>
      </div>
      
      <!-- Learn More Link -->
      <a href={`/pods/${generatePodSlug(title)}`} class="inline-flex items-center text-blue-500 text-blue-600 hover:bg-blue-50 text-sm">
        Learn more about this pod
        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>
</div>

<style>
  .pod-card {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
  }
  .pod-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 24px 48px -12px rgba(0, 0, 0, 0.25);
  }
  .pod-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #3B82F6, #8B5CF6, #EC4899);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  .pod-card:hover::before {
    opacity: 1;
  }
  .animate-fade-in-up { 
    animation: fadeInUp 0.8s ease-out; 
  }
  @keyframes fadeInUp {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style> 