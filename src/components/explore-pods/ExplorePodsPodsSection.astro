---
import { catalogUtils } from '../../content/catalog/_index.js';

export interface Props {
  data: {
    title: string;
    subtitle: string;
    featuredPodIds?: string[]; // Optional: specific pod IDs to display
  };
}

const { data } = Astro.props;

// Get pods from centralized catalog
let pods;
if (data.featuredPodIds) {
  // Get specific pods by IDs
  pods = data.featuredPodIds.map(id => catalogUtils.getProductById(id, 'pod')).filter(Boolean);
} else {
  // Get all pods
  const allProducts = catalogUtils.getAllProducts();
  pods = allProducts.pods || [];
}

// Color mapping for different pod types
const getColorClasses = (color: string) => {
  const colorMap: Record<string, { bg: string; border: string; text: string; badge: string }> = {
    blue: { 
      bg: 'bg-blue-50', 
      border: 'border-blue-200', 
      text: 'text-blue-700', 
      badge: 'bg-blue-100 text-blue-800' 
    },
    purple: { 
      bg: 'bg-purple-50', 
      border: 'border-purple-200', 
      text: 'text-purple-700', 
      badge: 'bg-purple-100 text-purple-800' 
    },
    green: { 
      bg: 'bg-green-50', 
      border: 'border-green-200', 
      text: 'text-green-700', 
      badge: 'bg-green-100 text-green-800' 
    },
    pink: { 
      bg: 'bg-pink-50', 
      border: 'border-pink-200', 
      text: 'text-pink-700', 
      badge: 'bg-pink-100 text-pink-800' 
    },
    orange: { 
      bg: 'bg-orange-50', 
      border: 'border-orange-200', 
      text: 'text-orange-700', 
      badge: 'bg-orange-100 text-orange-800' 
    },
    teal: { 
      bg: 'bg-teal-50', 
      border: 'border-teal-200', 
      text: 'text-teal-700', 
      badge: 'bg-teal-100 text-teal-800' 
    }
  };
  return colorMap[color] || colorMap.blue;
};
---

<section id="pods-section" class="py-20 bg-white">
  <div class="container mx-auto px-4">
    <!-- Section Header -->
    <div class="max-w-3xl mx-auto text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
        {data.title}
      </h2>
      <p class="text-lg text-gray-600 leading-relaxed">
        {data.subtitle}
      </p>
    </div>
    
    <!-- Pods Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
      {pods.filter(pod => pod !== null).map((pod, index) => {
        const colors = getColorClasses(pod.badgeColor);
        return (
          <div class="group bg-white rounded-xl border border-gray-200 shadow-sm hover:shadow-md transition-all duration-300 hover:-translate-y-1">
            <!-- Card Header -->
            <div class="p-6 border-b border-gray-100">
              <div class="flex items-start justify-between mb-4">
                <div class={`w-12 h-12 ${colors.bg} rounded-lg flex items-center justify-center`}>
                  <svg class="w-6 h-6 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                  </svg>
                </div>
                <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colors.badge}`}>
                  {pod.badge}
                </span>
              </div>
              
              <h3 class="text-xl font-semibold text-gray-900 mb-2">
                {pod.title}
              </h3>
              
              <div class="flex items-baseline space-x-2 mb-3">
                <span class="text-2xl font-bold text-gray-900">
                  {(pod as any).engagement || (pod as any).priceINR}
                </span>
              </div>
              
              <p class="text-sm text-gray-500 mb-4">
                {(pod as any).priceNote || (pod as any).priceUSD}
              </p>
            </div>
            
            <!-- Card Body -->
            <div class="p-6">
              <p class="text-gray-600 mb-6 leading-relaxed">
                {pod.description}
              </p>
              
              <!-- Features List -->
              <div class="space-y-3 mb-6">
                {pod.idealFor.slice(0, 3).map((feature: string) => (
                  <div class="flex items-start">
                    <svg class="w-4 h-4 text-green-500 mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-sm text-gray-600">{feature}</span>
                  </div>
                ))}
              </div>
              
              <!-- CTA Button -->
              <button 
                data-add-to-cart
                data-item-id={pod.id}
                data-item-type="pod"
                data-item-title={pod.title}
                data-item-description={pod.description}
                data-item-price={(pod as any).engagement || (pod as any).priceINR}
                class="w-full inline-flex items-center justify-center px-4 py-2 bg-primary-600 text-white font-semibold rounded-lg hover:bg-primary-700 transition-colors duration-200">
                Reserve Pod
              </button>
            </div>
          </div>
        );
      })}
    </div>
    
    <!-- Explore All Pods Button -->
    <div class="text-center">
      <a 
        href="/explore-pods" 
        class="inline-flex items-center px-6 py-3 bg-white text-gray-700 font-semibold rounded-lg border border-gray-300 hover:bg-gray-50 transition-colors duration-200 group"
      >
        <span>Explore All Pods</span>
        <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </div>
</section> 