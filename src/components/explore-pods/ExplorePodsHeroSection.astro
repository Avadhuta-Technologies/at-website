---
export interface Props {
  data: {
    title: string;
    subtitle: string;
    description?: string;
  };
}

const { data } = Astro.props;
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden">
  <div class="relative z-10 container max-w-5xl mx-auto px-4 py-20 md:py-32">
    <div class="max-w-6xl mx-auto text-center">
      
      <!-- Badge -->
      <div class="inline-flex items-center px-4 py-2 glass border-mint-200/30 text-mint-700 text-sm font-inter font-semibold rounded-full mb-8 hover:glass-strong transition-all duration-300">
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
        </svg>
        Pods
      </div>
      
      <!-- Main Headline -->
      <h1 class="text-4xl md:text-5xl lg:text-6xl font-inter font-bold text-graphite-900 mb-6 leading-tight">
        Explore High-Impact Service
        <span class="text-cerulean-600"> Pods</span>
        <span> Built for Results</span>
      </h1>
      
      <!-- Subtitle -->
      <h2 class="text-xl md:text-2xl font-inter text-graphite-700 mb-8 leading-relaxed max-w-3xl mx-auto">
        {data.subtitle}
      </h2>
      
      <!-- Description (if provided) -->
      {data.description && (
        <p class="text-lg font-inter text-graphite-600 mb-12 max-w-2xl mx-auto leading-relaxed">
          {data.description}
        </p>
      )}
      
      <!-- CTA Buttons -->
      <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
        <a 
          href="#pods-section" 
          class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-mint-500 to-cerulean-500 text-white font-inter font-semibold rounded-lg hover:from-mint-600 hover:to-cerulean-600 transition-all duration-300 hover:scale-105 hover:shadow-md group flex-shrink-0 shadow-sm"
          onclick="scrollToSection(event, 'pods-section')"
        >
          <span>Browse Pods</span>
          <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
        
        <a 
          href="/contact" 
          class="inline-flex items-center px-6 py-3 glass border-graphite-300/50 text-graphite-700 font-inter font-semibold rounded-lg hover:bg-graphite-50/50 hover:border-graphite-400/70 transition-all duration-300 group hover:scale-105"
        >
          <span>Talk To A Specialist</span>
          <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
          </svg>
        </a>
      </div>
      
    </div>
  </div>
</section>

<style>
  .animation-delay-2000 {
    animation-delay: 2s;
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 0.7;
    }
    50% {
      opacity: 0.4;
    }
  }
  
  .animate-pulse {
    animation: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
</style>

<script is:inline>
  function scrollToSection(event, sectionId) {
    event.preventDefault();
    const section = document.getElementById(sectionId);
    if (section) {
      section.scrollIntoView({
        behavior: 'smooth',
        block: 'start'
      });
    }
  }
</script> 