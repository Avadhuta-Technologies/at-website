---
// Summary Pack Card Component
export interface Props {
  pack: {
    id: string;
    title: string;
    description: string;
    price: string;
    priceUSD?: string;
    basePrice?: number;
    duration?: string;
    icon?: string;
    badge?: string;
    badgeColor?: string;
    category?: string;
  };
  isSelected?: boolean;
}

const { pack, isSelected = false } = Astro.props;
---

<div class="pack-card bg-white rounded-2xl border-2 p-6 hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1 cursor-pointer group ${isSelected ? 'border-mint-500 bg-mint-50' : 'border-gray-200'}" data-pack-id={pack.id}>
  <!-- Header -->
  <div class="flex items-start justify-between mb-4">
    <div class="flex items-center space-x-3">
      <div class="w-12 h-12 bg-gradient-to-br from-cerulean-500 to-lavender-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
        {pack.icon ? (
          <div class="w-6 h-6 text-white" set:html={pack.icon}></div>
        ) : (
          <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
          </svg>
        )}
      </div>
      <div>
        <h3 class="text-lg font-semibold text-graphite-900 group-hover:text-cerulean-600 transition-colors">
          {pack.title}
        </h3>
        {pack.badge && (
          <span class={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${pack.badgeColor || 'bg-cerulean-100 text-cerulean-800'}`}>
            {pack.badge}
          </span>
        )}
        {pack.category && (
          <span class="text-xs text-graphite-500 block mt-1">
            {pack.category}
          </span>
        )}
      </div>
    </div>
    
    <!-- Selection Indicator -->
    <div class="selection-indicator">
      {isSelected ? (
        <div class="w-6 h-6 bg-mint-500 rounded-full flex items-center justify-center">
          <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
        </div>
      ) : (
        <div class="w-6 h-6 border-2 border-gray-300 rounded-full group-hover:border-cerulean-500 transition-colors"></div>
      )}
    </div>
  </div>

  <!-- Description -->
  <p class="text-graphite-600 text-sm mb-4 line-clamp-3">
    {pack.description}
  </p>

  <!-- Price and Duration -->
  <div class="flex items-center justify-between mb-4">
    <div>
      <div class="text-xl font-bold text-cerulean-600">
        {pack.price}
      </div>
      {pack.priceUSD && (
        <div class="text-sm text-graphite-500">
          {pack.priceUSD}
        </div>
      )}
    </div>
    {pack.duration && (
      <div class="text-sm text-graphite-500 bg-gray-100 px-2 py-1 rounded">
        {pack.duration}
      </div>
    )}
  </div>

  <!-- Action Button -->
  <button class={`w-full py-2 px-4 rounded-lg font-medium transition-all duration-300 transform hover:scale-105 ${
    isSelected 
      ? 'bg-red-500 text-white hover:bg-red-600' 
      : 'bg-gradient-to-r from-cerulean-500 to-lavender-500 text-white hover:from-cerulean-600 hover:to-lavender-600'
  }`}>
    {isSelected ? 'Remove Pack' : 'Add Pack'}
  </button>

  <!-- Features Preview -->
  <div class="mt-4 pt-4 border-t border-gray-100">
    <div class="flex items-center space-x-2 text-xs text-graphite-500">
      <svg class="w-4 h-4 text-cerulean-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
      </svg>
      <span>Compatible with your pod</span>
    </div>
    <div class="flex items-center space-x-2 text-xs text-graphite-500 mt-1">
      <svg class="w-4 h-4 text-cerulean-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
      </svg>
      <span>Instant activation</span>
    </div>
  </div>
</div>

<script>
  // Pack card functionality
  document.addEventListener('DOMContentLoaded', () => {
    const packCards = document.querySelectorAll('.pack-card');
    
    packCards.forEach(card => {
      const actionBtn = card.querySelector('button');
      const packId = card.getAttribute('data-pack-id');
      const isSelected = card.classList.contains('border-mint-500');
      
      if (actionBtn && packId) {
        actionBtn.addEventListener('click', async (e) => {
          e.preventDefault();
          e.stopPropagation();
          
          if (typeof window !== 'undefined' && (window as any).cartService) {
            const cartService = (window as any).cartService;
            
            try {
              if (isSelected) {
                // Remove pack from cart
                const success = await cartService.removeItemById(packId, 'pack');
                if (success) {
                  // Show success notification
                  const notification = document.createElement('div');
                  notification.className = 'fixed top-20 right-4 z-50 p-4 rounded-lg shadow-lg bg-red-500 text-white transition-all duration-300 transform translate-x-full';
                  notification.textContent = 'Pack removed from cart!';
                  document.body.appendChild(notification);
                  
                  setTimeout(() => {
                    notification.classList.remove('translate-x-full');
                  }, 100);
                  
                  setTimeout(() => {
                    notification.classList.add('translate-x-full');
                    setTimeout(() => {
                      document.body.removeChild(notification);
                    }, 300);
                  }, 3000);
                }
              } else {
                // Add pack to cart
                const success = await cartService.addToCart({
                  id: packId,
                  type: 'pack'
                });
                
                if (success) {
                  // Show success notification
                  const notification = document.createElement('div');
                  notification.className = 'fixed top-20 right-4 z-50 p-4 rounded-lg shadow-lg bg-green-500 text-white transition-all duration-300 transform translate-x-full';
                  notification.textContent = 'Pack added to cart successfully!';
                  document.body.appendChild(notification);
                  
                  setTimeout(() => {
                    notification.classList.remove('translate-x-full');
                  }, 100);
                  
                  setTimeout(() => {
                    notification.classList.add('translate-x-full');
                    setTimeout(() => {
                      document.body.removeChild(notification);
                    }, 300);
                  }, 3000);
                }
              }
            } catch (error) {
              console.error('Error managing pack in cart:', error);
            }
          }
        });
      }
      
      // Make entire card clickable
      card.addEventListener('click', () => {
        const actionBtn = card.querySelector('button') as HTMLElement;
        if (actionBtn) {
          actionBtn.click();
        }
      });
    });
  });
</script> 