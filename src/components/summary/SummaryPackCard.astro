---
import DiscountedPriceDisplay from '../shared/DiscountedPriceDisplay.astro';

export interface Props {
  pack: {
    id: string;
    title: string;
    description: string;
    icon: string;
    badge?: string;
    badgeColor?: string;
    duration: string;
    basePriceINR: number;
    basePriceUSD: number;
    discountPercentage: number;
    category: string;
    deliverables: string[];
    idealFor: string[];
    addOns: string[];
    whyItWorks: string;
    testimonials: Array<{
      quote: string;
      author: string;
      role: string;
    }>;
    cta: {
      title: string;
      subtitle: string;
      primaryButton: string;
      secondaryButton: string;
    };
  };
  isSelected?: boolean;
  onSelect?: () => void;
  className?: string;
}

const { pack, isSelected = false, onSelect, className = "" } = Astro.props;
---

<div class={`summary-pack-card bg-white rounded-xl shadow-md border-2 transition-all duration-300 cursor-pointer ${
  isSelected 
    ? 'border-primary-500 shadow-lg scale-105' 
    : 'border-gray-200 hover:border-primary-300 hover:shadow-lg'
} ${className}`} data-pack-id={pack.id}>
  
  <!-- Header -->
  <div class="p-4 border-b border-gray-100">
    <div class="flex items-center justify-between mb-3">
      <div class="text-2xl">{pack.icon}</div>
      {pack.badge && (
        <span class={`px-2 py-1 rounded-full text-xs font-bold ${
          pack.badgeColor === 'green' ? 'bg-green-100 text-green-800' :
          pack.badgeColor === 'blue' ? 'bg-blue-100 text-blue-800' :
          pack.badgeColor === 'purple' ? 'bg-purple-100 text-purple-800' :
          'bg-gray-100 text-gray-800'
        }`}>
          {pack.badge}
        </span>
      )}
    </div>
    <h3 class="text-lg font-bold text-gray-900 mb-2">{pack.title}</h3>
    <p class="text-gray-600 text-sm mb-3">{pack.description}</p>
    
    <!-- Updated Price Display -->
    <div class="mb-4">
      <DiscountedPriceDisplay 
        basePriceINR={pack.basePriceINR}
        basePriceUSD={pack.basePriceUSD}
        discountPercentage={pack.discountPercentage}
        showBadge={true}
        showSavings={true}
        showOriginalPrice={true}
        size="md"
        variant="conversion"
        data-item-type="pack"
      />
      <p class="text-xs text-gray-500 mt-1">{pack.duration} delivery</p>
    </div>
  </div>

  <!-- Content -->
  <div class="p-4">
    <div class="mb-4">
      <h4 class="font-semibold text-gray-900 mb-2">What's Included:</h4>
      <ul class="space-y-1">
        {pack.deliverables.slice(0, 3).map((deliverable) => (
          <li class="flex items-start">
            <svg class="w-3 h-3 text-green-500 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
            </svg>
            <span class="text-xs text-gray-600">{deliverable}</span>
          </li>
        ))}
        {pack.deliverables.length > 3 && (
          <li class="text-xs text-primary-600 font-medium">
            +{pack.deliverables.length - 3} more deliverables
          </li>
        )}
      </ul>
    </div>

    <!-- CTA -->
    <button 
      class={`w-full px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-300 ${
        isSelected 
          ? 'bg-red-500 text-white hover:bg-red-600' 
          : 'bg-primary-600 text-white hover:bg-primary-700'
      }`}
      onclick="this.closest('.summary-pack-card').dispatchEvent(new CustomEvent('pack-select', { detail: { packId: '{{pack.id}}', action: '{{isSelected ? 'remove' : 'add'}}' } }))">
      {isSelected ? 'Remove Pack' : 'Add to Pod'}
    </button>
  </div>
</div> 