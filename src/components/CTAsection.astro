---
export interface Props {
  title?: string;
  description?: string;
  cta1Text?: string;
  cta1Link?: string;
  cta2Text?: string;
  cta2Link?: string;
  contactEmails?: string[];
}

const { 
  title = "Ready to Build Something Great?",
  description = "Whether you need an agile team or a laser-focused execution pack, Avadhuta Technologies is here to deliverâ€”faster launches, cleaner handoffs, and results you can trust. Let's turn your vision into reality. Get tailored access to our Pods & Packs. Get a tailored proposal/fit within 48 hours.",
  cta1Text = "Schedule A Discovery Call",
  cta1Link = "#contactform",
  cta2Text = "View Engagement Models", 
  cta2Link = "#engagement",
  contactEmails = ["support@novapod.ai"]
} = Astro.props;
---

<!-- ====== CTA Section Start -->
<section class="relative z-10 overflow-hidden bg-primary py-20 lg:py-[115px]">
  <div class="container mx-auto">
    <div class="relative overflow-hidden">
      <div class="flex flex-wrap items-stretch -mx-4">
        <div class="w-full px-4">
          <div class="mx-auto max-w-[570px] text-center">
            <h2 class="mb-2.5 text-3xl font-bold md:leading-[1.44] text-white md:text-[38px] gradient-title">
              {title}
            </h2>
            <p class="mb-6 mx-auto max-w-[515px] text-base leading-[1.5] text-white">
              {description}
            </p>
            
            <!-- CTA Buttons -->
            <div class="flex flex-col sm:flex-row gap-4 justify-center items-center mb-8">
              <a href={cta1Link}
                class="inline-block py-3 px-6 text-base font-medium text-white transition border border-white rounded-md hover:bg-white hover:text-primary">
                {cta1Text}
              </a>
              <a href={cta2Link}
                class="inline-block py-3 px-6 text-base font-medium text-white transition border border-white rounded-md hover:bg-white hover:text-primary">
                {cta2Text}
              </a>
            </div>

            <!-- Contact Information -->
            {contactEmails && contactEmails.length > 0 && (
              <div class="text-center">
                <p class="text-sm text-white/80 mb-2">Or reach out directly:</p>
                <div class="flex flex-col sm:flex-row gap-2 justify-center items-center">
                  {contactEmails.map((email) => (
                    <a href={`mailto:${email}`} class="text-sm text-white hover:text-white/80 transition-colors">
                      {email}
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  </div>
  <div>
    <span class="absolute top-0 left-0">
      <svg width="495" height="470" viewBox="0 0 495 470" fill="none" xmlns="http://www.w3.org/2000/svg">
        <circle cx="55" cy="442" r="138" stroke="white" stroke-opacity="0.04" stroke-width="50" />
        <circle cx="446" r="39" stroke="white" stroke-opacity="0.04" stroke-width="20" />
        <path d="M245.406 137.609L233.985 94.9852L276.609 106.406L245.406 137.609Z" stroke="white"
          stroke-opacity="0.08" stroke-width="12" />
      </svg>
    </span>
    <span class="absolute bottom-0 right-0">
      <svg width="493" height="470" viewBox="0 0 493 470" fill="none" xmlns="http://www.w3.org/2000/svg">
        <circle cx="462" cy="5" r="138" stroke="white" stroke-opacity="0.04" stroke-width="50" />
        <circle cx="49" cy="470" r="39" stroke="white" stroke-opacity="0.04" stroke-width="20" />
        <path d="M222.393 226.701L272.808 213.192L259.299 263.607L222.393 226.701Z" stroke="white"
          stroke-opacity="0.06" stroke-width="13" />
      </svg>
    </span>
  </div>
</section>
<!-- ====== CTA Section End -->