---
export interface Props {
  data: {
    title: string;
    subtitle: string;
    description?: string;
  };
}

const { data } = Astro.props;
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden">
  <div class="relative z-10 container mx-auto max-w-screen-2xl px-4 pt-20 md:pt-32">
    <div class="max-w-6xl mx-auto text-center">
      
      <!-- Glass Badge -->
      <div class="inline-flex items-center px-4 py-2 glass border-mint-200/30 text-mint-700 text-sm font-semibold rounded-full mb-8 hover:glass-strong transition-all duration-300">
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
          ></path>
        </svg>
        Our Work
      </div>

      <!-- Main Headline -->
      <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold gradient-title mb-6 leading-tight">
        Our
        <span class="gradient-text"> Work</span>
      </h1>

      <!-- Subtitle -->
      <h2 class="text-xl md:text-2xl font-inter text-graphite-700 mb-8 leading-relaxed max-w-3xl mx-auto">
        {data.subtitle}
      </h2>

      <!-- Description (if provided) -->
      {
        data.description && (
          <p class="text-lg font-inter text-graphite-600 mb-12 max-w-2xl mx-auto leading-relaxed">
            {data.description}
          </p>
        )
      }
      
    </div>
  </div>
</section>

<style>
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
  }
  
  @keyframes float-delayed {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-15px); }
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-float-delayed {
    animation: float-delayed 8s ease-in-out infinite;
    animation-delay: 2s;
  }
  
  /* Glass button enhancements */
  .glass.bg-mint-500\/20 {
    background: linear-gradient(135deg, rgba(34, 197, 94, 0.15) 0%, rgba(34, 197, 94, 0.08) 100%);
  }
  
  .glass.bg-mint-500\/20:hover {
    background: linear-gradient(135deg, rgba(34, 197, 94, 0.25) 0%, rgba(34, 197, 94, 0.15) 100%);
  }
  
  .glass.border-graphite-300\/50 {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
  }
  
  .glass.border-graphite-300\/50:hover {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.2) 0%, rgba(255, 255, 255, 0.1) 100%);
  }
</style>

<script is:inline>
  function scrollToSection(event, sectionId) {
    event.preventDefault();
    const section = document.getElementById(sectionId);
    if (section) {
      section.scrollIntoView({
        behavior: 'smooth',
        block: 'start',
      });
    }
  }
</script>

