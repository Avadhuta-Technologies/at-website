<!-- ====== Contact Start ====== -->
<section class="relative overflow-hidden py-20 lg:py-[115px]">
  <div class="absolute top-0 left-0 -z-[1] w-full h-full"></div>
  <div class="absolute top-0 left-0 -z-[1] h-1/2 w-full bg-[#E9F9FF] lg:h-[45%] xl:h-1/2"></div>
  <div class="container mx-auto px-4">
    <div class="flex flex-wrap items-center -mx-4">
      <div class="w-full lg:w-7/12 xl:w-8/12 px-4">
        <div class="max-w-[570px] mb-12 lg:mb-0">
          <span class="text-primary font-semibold text-lg block mb-2">
            {data.badge}
          </span>
          <h2 class="text-dark font-bold text-3xl sm:text-[38px] leading-tight mb-6 lg:mb-10">
            {data.title}
          </h2>
          <p class="text-base text-body-color leading-relaxed mb-9 lg:mb-10">
            {data.description}
          </p>
          <div class="flex flex-col space-y-4">
            {data.contactInfo.map((info) => (
              <div class="flex items-center">
                <div class="w-12 h-12 flex items-center justify-center rounded-lg bg-primary bg-opacity-10 text-primary mr-4">
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={info.icon}></path>
                  </svg>
                </div>
                <div>
                  <h4 class="text-dark font-semibold text-lg mb-1">{info.title}</h4>
                  <p class="text-body-color">{info.value}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
      <div class="w-full lg:w-5/12 xl:w-4/12 px-4">
        <div class="wow fadeInUp rounded-lg bg-white py-10 px-8 shadow-testimonial sm:py-12 sm:px-10 md:p-[60px] lg:p-10 lg:py-12 lg:px-10 2xl:p-[60px]">
          <h3 class="font-bold text-2xl text-dark mb-8 text-center">
            {data.formTitle}
          </h3>
          
          <div id="order-summary" class="mb-8 p-4 bg-blue-50 rounded-lg border border-blue-200" style="display: none;">
            <h4 class="font-semibold text-gray-900 mb-3">Selected Items:</h4>
            <div id="selected-items" class="space-y-2 mb-4"></div>
            <div class="mt-3 pt-3 border-t border-blue-200">
              <div class="flex justify-between font-semibold">
                <span>Total:</span>
                <span id="total-price" class="text-green-600"></span>
              </div>
            </div>
          </div>
          
          <form>
            <div class="mb-6">
              <input
                type="text"
                placeholder="Your Name"
                class="bg-transparent w-full text-body-color placeholder:text-body-color/60 border-0 border-b border-[#f1f1f1] pb-3 focus:border-primary focus:outline-none" required />
            </div>
            <div class="mb-6">
              <input
                type="email"
                placeholder="Your Email"
                class="bg-transparent w-full text-body-color placeholder:text-body-color/60 border-0 border-b border-[#f1f1f1] pb-3 focus:border-primary focus:outline-none" required />
            </div>
            <div class="mb-6">
              <input
                type="text"
                placeholder="Your Phone"
                class="bg-transparent w-full text-body-color placeholder:text-body-color/60 border-0 border-b border-[#f1f1f1] pb-3 focus:border-primary focus:outline-none" required />
            </div>
            <div class="mb-6">
              <input
                type="text"
                placeholder="Your Company"
                class="bg-transparent w-full text-body-color placeholder:text-body-color/60 border-0 border-b border-[#f1f1f1] pb-3 focus:border-primary focus:outline-none" />
            </div>
            <div class="mb-10">
              <textarea
                rows="6"
                placeholder="Your Message"
                class="bg-transparent w-full text-body-color placeholder:text-body-color/60 resize-none border-0 border-b border-[#f1f1f1] pb-3 focus:border-primary focus:outline-none" required></textarea>
            </div>
            <div>
              <button type="submit" class="w-full bg-primary text-white border border-primary rounded-md py-4 px-9 transition duration-300 ease-in-out hover:bg-opacity-80 hover:shadow-signUp">
                {data.buttonText}
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>
<!-- ====== Contact End ====== -->

<script>
  // Handle cart data from URL parameters
  if (typeof window !== 'undefined') {
    const urlParams = new URLSearchParams(window.location.search);
    const cartData = urlParams.get('cart');
    
    if (cartData) {
      try {
        const items = JSON.parse(decodeURIComponent(cartData));
        displayOrderSummary(items);
        
        // Pre-fill message with cart details
        const messageTextarea = document.getElementById('message');
        if (messageTextarea) {
          const cartDetails = items.map(item => 
            `${item.title} (${item.type}) - ${item.price}`
          ).join('\n');
          messageTextarea.value = `I'm interested in the following services:\n\n${cartDetails}\n\nPlease provide more details about my requirements.`;
        }
      } catch (error) {
        console.error('Error parsing cart data:', error);
      }
    }
  }

  function displayOrderSummary(items) {
    const orderSummary = document.getElementById('order-summary');
    const orderItems = document.getElementById('order-items');
    const orderTotal = document.getElementById('order-total');
    
    if (orderSummary && orderItems && orderTotal) {
      orderSummary.style.display = 'block';
      
      // Display items
      orderItems.innerHTML = items.map(item => `
        <div class="flex justify-between items-center">
          <span class="text-blue-800 ">${item.title} × ${item.quantity}</span>
          <span class="font-medium text-blue-900 ">${item.price}</span>
        </div>
      `).join('');
      
      // Calculate and display total
      const total = items.reduce((sum, item) => {
        const price = parsePrice(item.price);
        return sum + (price * item.quantity);
      }, 0);
      
      orderTotal.textContent = formatPrice(total);
    }
  }

  function parsePrice(price) {
    if (typeof price === 'number') return price;
    if (typeof price === 'string') {
      const match = price.match(/[\d.]+/);
      return match ? parseFloat(match[0]) * 100000 : 0;
    }
    return 0;
  }

  function formatPrice(amount) {
    if (amount >= 100000) {
      return `₹${(amount / 100000).toFixed(1)}L`;
    } else if (amount >= 1000) {
      return `₹${(amount / 1000).toFixed(0)}K`;
    }
    return `₹${amount.toFixed(0)}`;
  }

  // Handle form submission
  document.getElementById('contact-form')?.addEventListener('submit', function(e) {
    e.preventDefault();
    
    // Show success message
    const form = e.target;
    const submitBtn = form.querySelector('button[type="submit"]');
    const originalText = submitBtn.textContent;
    
    submitBtn.textContent = 'Sending...';
    submitBtn.disabled = true;
    
    // Simulate form submission (in real implementation, this would send to your backend)
    setTimeout(() => {
      submitBtn.textContent = 'Message Sent!';
      submitBtn.classList.add('bg-green-500');
      
      // Reset form
      setTimeout(() => {
        form.reset();
        submitBtn.textContent = originalText;
        submitBtn.disabled = false;
        submitBtn.classList.remove('bg-green-500');
      }, 2000);
    }, 1000);
  });
</script>