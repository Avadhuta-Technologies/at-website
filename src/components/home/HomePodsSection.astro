---
import { catalogUtils } from '../../content/catalog/_index.js';
import AvailablePodCard from '../explore-pods/AvailablePodCard.astro';

export interface Props {
  data: {
    title: string;
    subtitle: string;
    featuredPodIds?: string[]; // Optional: specific pod IDs to display
  };
} 

const { data } = Astro.props;

// Get pods from centralized catalog
let pods: any[] = [];
if (data.featuredPodIds) {
  // Get specific pods by IDs
  pods = data.featuredPodIds.map(id => catalogUtils.getProductById(id, 'pod')).filter(Boolean);
} else {
  // Get all pods
  const allProducts = catalogUtils.getAllProducts().pods;
  pods = allProducts || [];
  console.log("ðŸš€ ~ pods:", pods)
}

const validPods = pods.filter(pod => 
  pod && 
  typeof pod === 'object' && 
  'name' in pod && 
  'tagline' in pod && 
  'idealFor' in pod && 
  'whatsInPod' in pod
) as Array<{
  name: string;
  tagline: string;
  idealFor: string[];
  whatsInPod: {
    description: string;
    teamComposition: string[];
    upgradeNote: string;
  };
  whatCanDo: string[];
  deliveryTimelines: string[];
  whyTrust: string[];
  pastUseCases: string[];
  pricing: string[];
}>;

// Color mapping for different pod types - updated to use our color palette
const getColorClasses = (color: string) => {
  const colorMap: Record<string, { bg: string; border: string; text: string; badge: string }> = {
    cerulean: { 
      bg: 'bg-cerulean-50', 
      border: 'border-cerulean-200', 
      text: 'text-cerulean-700', 
      badge: 'bg-cerulean-100 text-cerulean-700 border-cerulean-200' 
    },
    lavender: { 
      bg: 'bg-lavender-50', 
      border: 'border-lavender-200', 
      text: 'text-lavender-700', 
      badge: 'bg-lavender-100 text-lavender-700 border-lavender-200' 
    },
    mint: { 
      bg: 'bg-mint-50', 
      border: 'border-mint-200', 
      text: 'text-mint-700', 
      badge: 'bg-mint-100 text-mint-700 border-mint-200' 
    },
    graphite: { 
      bg: 'bg-graphite-50', 
      border: 'border-graphite-200', 
      text: 'text-graphite-700', 
      badge: 'bg-graphite-100 text-graphite-700 border-graphite-200' 
    }
  };
  return colorMap[color] || colorMap.mint;
};
---

<section id="pods-section" class="py-20 bg-gradient-to-br from-graphite-50 via-white to-mint-50/30 relative overflow-hidden">
  <!-- Background Elements -->
  <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%23f1f3f4" fill-opacity="0.4"%3E%3Ccircle cx="30" cy="30" r="2"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-30"></div>
  
  <!-- Floating Glass Elements -->
  <div class="absolute top-20 left-10 w-32 h-32 bg-gradient-to-br from-mint-200/20 to-cerulean-200/20 rounded-full blur-3xl"></div>
  <div class="absolute bottom-20 right-10 w-40 h-40 bg-gradient-to-br from-cerulean-200/20 to-lavender-200/20 rounded-full blur-3xl"></div>
  <div class="absolute top-1/2 left-1/4 w-24 h-24 bg-gradient-to-br from-lavender-200/20 to-mint-200/20 rounded-full blur-2xl"></div>
  <div class="absolute top-1/3 right-1/4 w-20 h-20 bg-gradient-to-br from-cerulean-200/20 to-lavender-200/20 rounded-full blur-2xl"></div>

  <div class="container mx-auto px-4 relative z-10">
    <!-- Section Header -->
    <div class="max-w-3xl mx-auto text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-manrope font-bold text-graphite-900 mb-4">
        {data.title}
      </h2>
      <p class="text-lg text-graphite-600 leading-relaxed font-inter">
        {data.subtitle} {validPods.length}
      </p>
    </div>
    
    <!-- Pods Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
      {validPods?.slice(0, 6).map((pod, index) => (
        <div class="group relative overflow-hidden rounded-xl transition-all duration-300 hover:scale-105 hover:-translate-y-1">
          <!-- Glass Card Background -->
          <div class="absolute inset-0 bg-gradient-to-br from-white/80 to-white/60 backdrop-blur-md border border-white/20 rounded-xl shadow-sm group-hover:shadow-lg transition-all duration-300"></div>
          
          <!-- Card Content -->
          <div class="relative p-6 flex flex-col h-full">
            <!-- Card Header -->
            <div class="mb-4">
              <div class="flex items-center justify-between mb-3">
                <div class="inline-flex items-center px-2.5 py-1 bg-gradient-to-r from-mint-100 to-cerulean-100 rounded-lg text-xs font-semibold font-manrope border border-mint-200/50 text-graphite-700">
                  Pod {index + 1}
                </div>
                <div class="w-7 h-7 bg-gradient-to-br from-mint-100 to-cerulean-100 rounded-lg flex items-center justify-center border border-mint-200/50">
                  <svg class="w-4 h-4 text-mint-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                  </svg>
                </div>
              </div>
              <h3 class="text-lg font-manrope font-bold text-graphite-900 mb-1 leading-tight">
                {pod.name}
              </h3>
              <p class="text-graphite-600 text-xs font-inter line-clamp-2">
                {pod.tagline}
              </p>
            </div>
            
            <!-- Compact Content -->
            <div class="flex-1 space-y-4">
              <!-- Quick Overview -->
              <div class="overview-section">
                <p class="text-graphite-600 text-xs font-inter line-clamp-3 leading-relaxed">
                  {pod.whatsInPod.description}
                </p>
              </div>

              <!-- Key Highlights -->
              <div class="highlights-grid">
                <!-- Ideal For -->
                <div class="highlight-item">
                  <div class="highlight-icon">
                    <svg class="w-3 h-3 text-cerulean-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                    </svg>
                  </div>
                  <div class="highlight-content">
                    <div class="highlight-label font-manrope text-xs font-semibold text-graphite-700">Ideal For</div>
                    <div class="highlight-text font-inter text-xs text-graphite-600 line-clamp-1">
                      {pod.idealFor[0]}
                    </div>
                  </div>
                </div>

                <!-- Team Size -->
                <div class="highlight-item">
                  <div class="highlight-icon">
                    <svg class="w-3 h-3 text-lavender-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                    </svg>
                  </div>
                  <div class="highlight-content">
                    <div class="highlight-label font-manrope text-xs font-semibold text-graphite-700">Team</div>
                    <div class="highlight-text font-inter text-xs text-graphite-600 line-clamp-1">
                      {pod.whatsInPod.teamComposition.length} members
                    </div>
                  </div>
                </div>

                <!-- Timeline -->
                <div class="highlight-item">
                  <div class="highlight-icon">
                    <svg class="w-3 h-3 text-mint-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                  </div>
                  <div class="highlight-content">
                    <div class="highlight-label font-manrope text-xs font-semibold text-graphite-700">Timeline</div>
                    <div class="highlight-text font-inter text-xs text-graphite-600 line-clamp-1">
                      {pod.deliveryTimelines?.[0] || 'Custom'}
                    </div>
                  </div>
                </div>
              </div>

              <!-- Quick Actions -->
              <div class="quick-actions">
                <div class="action-tags">
                  {pod.idealFor.slice(0, 2).map((item) => (
                    <span class="action-tag inline-flex items-center px-2 py-1 bg-gradient-to-r from-white/60 to-white/40 backdrop-blur-sm border border-white/30 rounded-md text-xs font-inter text-graphite-600 transition-all duration-200 hover:from-white/80 hover:to-white/60 hover:scale-105">
                      {item}
                    </span>
                  ))}
                </div>
              </div>
            </div>

            <!-- Reserve Pod CTA Button -->
            <div class="mt-auto mb-3">
              <button 
                data-add-to-cart
                data-item-id={pod.name.toLowerCase().replace(/\s+/g, '-')}
                data-item-type="pod"
                data-item-title={pod.name}
                data-item-description={pod.tagline}
                class="w-full inline-flex items-center justify-center px-4 py-2.5 bg-gradient-to-r from-mint-500 to-cerulean-500 text-white font-inter font-semibold rounded-lg hover:from-mint-600 hover:to-cerulean-600 transition-all duration-300 hover:scale-105 shadow-sm hover:shadow-md">
                Reserve Pod
              </button>
            </div>

            <!-- Card Footer -->
            <div class="pt-3 border-t border-graphite-100/50">
              <div class="flex items-center justify-between">
                <div class="flex items-center space-x-1">
                  <svg class="w-3 h-3 text-mint-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                  </svg>
                  <span class="text-xs text-graphite-600 font-inter font-medium">
                    Ready to start
                  </span>
                </div>
                <a href={`/pods/${pod.name.toLowerCase().replace(/\s+/g, '-')}`} class="text-mint-600 hover:text-mint-700 text-sm font-semibold font-manrope transition-colors flex items-center">
                  Details
                  <svg class="w-3 h-3 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </a>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <!-- Explore All Pods Button -->
    <div class="text-center">
      <a 
        href="/explore-pods" 
        class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-white/80 to-white/60 backdrop-blur-md text-graphite-700 font-inter font-semibold rounded-xl border border-white/20 hover:from-white/90 hover:to-white/70 transition-all duration-300 hover:scale-105 shadow-sm hover:shadow-md group"
      >
        <span class="font-manrope">Explore All Pods</span>
        <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  /* Compact Layout */
  .overview-section {
    margin-bottom: 0.5rem;
  }

  .highlights-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 0.75rem;
    margin-bottom: 0.75rem;
  }

  .highlight-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    background: rgba(255, 255, 255, 0.4);
    border-radius: 0.5rem;
    border: 1px solid rgba(241, 243, 244, 0.3);
    transition: all 0.2s ease;
  }

  .highlight-item:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    background: rgba(255, 255, 255, 0.6);
  }

  .highlight-icon {
    flex-shrink: 0;
    width: 1.5rem;
    height: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(255, 255, 255, 0.8);
    border-radius: 0.25rem;
    border: 1px solid rgba(241, 243, 244, 0.3);
  }

  .highlight-content {
    flex: 1;
    min-width: 0;
  }

  .highlight-label {
    font-size: 0.625rem;
    font-weight: 600;
    color: #202124;
    margin-bottom: 0.125rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  .highlight-text {
    font-size: 0.75rem;
    color: #5f6368;
    line-height: 1.2;
  }

  .quick-actions {
    margin-top: 0.5rem;
  }

  .action-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.375rem;
  }

  /* Text Clamping */
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }

  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  .line-clamp-3 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }

  /* Card Animations */
  .pod-card {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .pod-card.animate {
    opacity: 1;
    transform: translateY(0);
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 2rem;
    }
  }

  @media (max-width: 768px) {
    .grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
    
    .pod-card {
      padding: 1.5rem;
    }

    .highlights-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 0.5rem;
    }

    .highlight-item {
      padding: 0.375rem;
    }

    .highlight-icon {
      width: 1.25rem;
      height: 1.25rem;
    }
  }

  /* Dark Mode Support */
  @media (prefers-color-scheme: dark) {
    .highlight-item {
      background: rgba(32, 33, 36, 0.4);
      border-color: rgba(241, 243, 244, 0.1);
    }

    .highlight-item:hover {
      background: rgba(32, 33, 36, 0.6);
    }

    .highlight-icon {
      background: rgba(32, 33, 36, 0.8);
      border-color: rgba(241, 243, 244, 0.1);
    }

    .highlight-label {
      color: #e8eaed;
    }

    .highlight-text {
      color: #9aa0a6;
    }

    .action-tag {
      background: rgba(32, 33, 36, 0.4);
      border-color: rgba(241, 243, 244, 0.1);
      color: #9aa0a6;
    }

    .action-tag:hover {
      background: rgba(32, 33, 36, 0.6);
    }
  }
</style>

<script>
  // Scroll-triggered animations
  function initScrollAnimations() {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const cardObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          // Add delay for staggered animation
          setTimeout(() => {
            entry.target.classList.add('animate');
          }, index * 100);
        }
      });
    }, observerOptions);

    // Observe all pod cards
    document.querySelectorAll('.pod-card').forEach(card => {
      cardObserver.observe(card);
    });
  }

  // Initialize animations when DOM is loaded
  document.addEventListener('DOMContentLoaded', initScrollAnimations);
</script>
