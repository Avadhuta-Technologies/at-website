---
import { catalogUtils } from '../../content/catalog/_index.js';
import AvailablePodCard from '../explore-pods/AvailablePodCard.astro';

export interface Props {
  data: {
    title: string;
    subtitle: string;
    featuredPodIds?: string[]; // Optional: specific pod IDs to display
  };
} 

const { data } = Astro.props;

// Get pods from centralized catalog
let pods: any[] = [];
if (data.featuredPodIds) {
  // Get specific pods by IDs
  pods = data.featuredPodIds.map(id => catalogUtils.getProductById(id, 'pod')).filter(Boolean);
} else {
  // Get all pods
  const allProducts = catalogUtils.getAllProducts().pods;
  pods = allProducts || [];
  console.log("ðŸš€ ~ pods:", pods)
}

const validPods = pods.filter(pod => 
  pod && 
  typeof pod === 'object' && 
  'name' in pod && 
  'tagline' in pod && 
  'idealFor' in pod && 
  'whatsInPod' in pod
) as Array<{
  name: string;
  tagline: string;
  idealFor: string[];
  whatsInPod: {
    description: string;
    teamComposition: string[];
    upgradeNote: string;
  };
  whatCanDo: string[];
  deliveryTimelines: string[];
  whyTrust: string[];
  pastUseCases: string[];
  pricing: string[];
}>;

// Color mapping for different pod types
const getColorClasses = (color: string) => {
  const colorMap: Record<string, { bg: string; border: string; text: string; badge: string }> = {
    blue: { 
      bg: 'bg-blue-50', 
      border: 'border-blue-200', 
      text: 'text-blue-700', 
      badge: 'bg-blue-100 text-blue-800' 
    },
    purple: { 
      bg: 'bg-purple-50', 
      border: 'border-purple-200', 
      text: 'text-purple-700', 
      badge: 'bg-purple-100 text-purple-800' 
    },
    green: { 
      bg: 'bg-green-50', 
      border: 'border-green-200', 
      text: 'text-green-700', 
      badge: 'bg-green-100 text-green-800' 
    },
    pink: { 
      bg: 'bg-pink-50', 
      border: 'border-pink-200', 
      text: 'text-pink-700', 
      badge: 'bg-pink-100 text-pink-800' 
    },
    orange: { 
      bg: 'bg-orange-50', 
      border: 'border-orange-200', 
      text: 'text-orange-700', 
      badge: 'bg-orange-100 text-orange-800' 
    },
    teal: { 
      bg: 'bg-teal-50', 
      border: 'border-teal-200', 
      text: 'text-teal-700', 
      badge: 'bg-teal-100 text-teal-800' 
    }
  };
  return colorMap[color] || colorMap.blue;
};
---

<section id="pods-section" class="py-20 bg-white">
  <div class="container mx-auto px-4">
    <!-- Section Header -->
    <div class="max-w-3xl mx-auto text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
        {data.title}
      </h2>
      <p class="text-lg text-gray-600 leading-relaxed">
        {data.subtitle} {validPods.length}
      </p>
    </div>
    
    <!-- Pods Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
      {validPods?.slice(0, 6).map((pod, index) => (
        <AvailablePodCard pod={pod} index={index} />
      ))}
    </div>
    
  
    
    <!-- Explore All Pods Button -->
    <div class="text-center">
      <a 
        href="/explore-pods" 
        class="inline-flex items-center px-6 py-3 bg-white text-gray-700 font-semibold rounded-lg border border-gray-300 hover:bg-gray-50 transition-colors duration-200 group"
      >
        <span>Explore All Pods</span>
        <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  .home-pods-section {
    @apply py-20 bg-gray-50 dark:bg-gray-800;
  }
  
  .home-pods-container {
    @apply container mx-auto px-4;
    max-width: 1200px;
  }
  
  .home-pods-header {
    @apply text-center mb-16;
  }
  
  .home-pods-title {
    @apply text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-4;
  }
  
  .home-pods-subtitle {
    @apply text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto;
  }
  
  .home-pods-grid {
    @apply grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12;
  }
  
  .home-pod-card {
    @apply bg-white dark:bg-gray-700 rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105;
    border: 1px solid rgba(0, 0, 0, 0.1);
  }
  
  .home-pod-card-header {
    @apply mb-6;
  }
  
  .home-pod-badge {
    @apply inline-block px-3 py-1 rounded-full text-xs font-semibold mb-4;
  }
  
  .home-pod-badge--green {
    @apply bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200;
  }
  
  .home-pod-badge--blue {
    @apply bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200;
  }
  
  .home-pod-badge--purple {
    @apply bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200;
  }
  
  .home-pod-title {
    @apply text-xl font-bold text-gray-900 dark:text-white mb-2;
  }
  
  .home-pod-subtitle {
    @apply text-gray-600 dark:text-gray-300 text-sm;
  }
  
  .home-pod-content {
    @apply mb-6;
  }
  
  .home-pod-description {
    @apply text-gray-600 dark:text-gray-300 mb-4 leading-relaxed;
  }
  
  .home-pod-section-title {
    @apply text-sm font-semibold text-gray-900 dark:text-white mb-2;
  }
  
  .home-pod-ideal-text {
    @apply text-sm text-gray-600 dark:text-gray-300;
  }
  
  .home-pod-team-list,
  .home-pod-deliverables-list {
    @apply space-y-1;
  }
  
  .home-pod-team-member,
  .home-pod-deliverable {
    @apply text-sm text-gray-600 dark:text-gray-300;
  }
  
  .home-pod-footer {
    @apply flex items-center justify-between pt-6 border-t border-gray-200 dark:border-gray-600;
  }
</style>
