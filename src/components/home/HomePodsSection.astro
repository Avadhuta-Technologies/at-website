---
import { catalogUtils } from '../../content/catalog/_index.js';

export interface Props {
  data: {
    title: string;
    subtitle: string;
    featuredPodIds?: string[]; // Optional: specific pod IDs to display
  };
}

const { data } = Astro.props;

// Get pods from centralized catalog
let pods: any[] = [];
if (data.featuredPodIds) {
  // Get specific pods by IDs
  pods = data.featuredPodIds.map(id => catalogUtils.getProductById(id, 'pod')).filter(Boolean);
} else {
  // Get all pods
  const allProducts = catalogUtils.getAllProducts();
  pods = allProducts.pods || [];
}

// Color mapping for different pod types
const getColorClasses = (color: string) => {
  const colorMap: Record<string, { bg: string; border: string; text: string }> = {
    blue: { bg: 'from-blue-500 to-blue-600', border: 'border-blue-500', text: 'text-blue-600' },
    purple: { bg: 'from-purple-500 to-purple-600', border: 'border-purple-500', text: 'text-purple-600' },
    green: { bg: 'from-green-500 to-green-600', border: 'border-green-500', text: 'text-green-600' },
    pink: { bg: 'from-pink-500 to-pink-600', border: 'border-pink-500', text: 'text-pink-600' },
    orange: { bg: 'from-orange-500 to-orange-600', border: 'border-orange-500', text: 'text-orange-600' },
    teal: { bg: 'from-teal-500 to-teal-600', border: 'border-teal-500', text: 'text-teal-600' }
  };
  return colorMap[color] || colorMap.blue;
};
---

<section class="py-16 bg-white dark:bg-slate-900">
  <div class="container mx-auto px-4">
    <div class="text-center mb-12 align-center max-w-[800px] mx-auto w-full">
      <h2 class="text-3xl md:text-4xl font-bold text-dark dark:text-white mb-4">{data.title}</h2>
      <p class="text-gray-600 dark:text-gray-400 ">{data.subtitle}</p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {pods.filter(pod => pod !== null).map((pod, index) => {
        const colors = getColorClasses(pod.badgeColor);
        return (
          <div class="bg-white dark:bg-slate-800 rounded-2xl shadow-lg border border-gray-200 dark:border-slate-700 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2">
            <div class="p-6">
              <div class="flex items-center mb-4">
                <div class={`w-12 h-12 bg-gradient-to-r ${colors.bg} rounded-xl flex items-center justify-center mr-4`}>
                  <img src={pod.icon} alt={`${pod.title} Icon`} class="w-6 h-6 filter brightness-0 invert" />
                </div>
                <div>
                  <h3 class="text-xl font-bold text-dark dark:text-white">{pod.title}</h3>
                  <div class="text-2xl font-bold text-gray-900 dark:text-white">{pod.engagement}</div>
                  <div class="text-sm text-gray-500 dark:text-gray-400">{pod.priceNote}</div>
                </div>
              </div>
              
              <p class="text-gray-600 dark:text-gray-300 mb-6">{pod.description}</p>
              
              <ul class="space-y-3 mb-6">
                {pod.idealFor.slice(0, 3).map((feature: string) => (
                  <li class="flex items-start text-sm">
                    <svg class="w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-600 dark:text-gray-300">{feature}</span>
                  </li>
                ))}
              </ul>
              
              <button 
                data-add-to-cart
                data-item-id={pod.id}
                data-item-type="pod"
                data-item-title={pod.title}
                data-item-description={pod.description}
                data-item-price={pod.engagement}
                class={`w-full bg-gradient-to-r ${colors.bg} text-white font-semibold py-3 px-6 rounded-lg hover:opacity-90 transition-all duration-300`}>
                Add to Cart
              </button>
            </div>
          </div>
        );
      })}
    </div>
    
    <!-- Explore All Pods Button -->
    <div class="text-center mt-12">
      <a 
        href="/explore-pods" 
        class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-lg hover:opacity-90 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1">
        <span>Explore All Pods</span>
        <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  .home-pods-section {
    @apply py-20 bg-gray-50 dark:bg-gray-800;
  }
  
  .home-pods-container {
    @apply container mx-auto px-4;
    max-width: 1200px;
  }
  
  .home-pods-header {
    @apply text-center mb-16;
  }
  
  .home-pods-title {
    @apply text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-4;
  }
  
  .home-pods-subtitle {
    @apply text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto;
  }
  
  .home-pods-grid {
    @apply grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12;
  }
  
  .home-pod-card {
    @apply bg-white dark:bg-gray-700 rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105;
    border: 1px solid rgba(0, 0, 0, 0.1);
  }
  
  .home-pod-card-header {
    @apply mb-6;
  }
  
  .home-pod-badge {
    @apply inline-block px-3 py-1 rounded-full text-xs font-semibold mb-4;
  }
  
  .home-pod-badge--green {
    @apply bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200;
  }
  
  .home-pod-badge--blue {
    @apply bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200;
  }
  
  .home-pod-badge--purple {
    @apply bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200;
  }
  
  .home-pod-title {
    @apply text-xl font-bold text-gray-900 dark:text-white mb-2;
  }
  
  .home-pod-subtitle {
    @apply text-gray-600 dark:text-gray-300 text-sm;
  }
  
  .home-pod-content {
    @apply mb-6;
  }
  
  .home-pod-description {
    @apply text-gray-600 dark:text-gray-300 mb-4 leading-relaxed;
  }
  
  .home-pod-section-title {
    @apply text-sm font-semibold text-gray-900 dark:text-white mb-2;
  }
  
  .home-pod-ideal-text {
    @apply text-sm text-gray-600 dark:text-gray-300;
  }
  
  .home-pod-team-list,
  .home-pod-deliverables-list {
    @apply space-y-1;
  }
  
  .home-pod-team-member,
  .home-pod-deliverable {
    @apply text-sm text-gray-600 dark:text-gray-300;
  }
  
  .home-pod-footer {
    @apply flex items-center justify-between pt-6 border-t border-gray-200 dark:border-gray-600;
  }
  
  .home-pod-pricing {
    @apply flex flex-col;
  }
  
  .home-pod-price {
    @apply text-lg font-bold text-gray-900 dark:text-white;
  }
  
  .home-pod-engagement {
    @apply text-sm text-gray-500 dark:text-gray-400;
  }
  
  .home-pod-cta {
    @apply inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors duration-300;
  }
  
  .home-pods-cta {
    @apply text-center;
  }
  
  .home-pods-view-all {
    @apply inline-flex items-center px-8 py-4 bg-gray-900 hover:bg-gray-800 dark:bg-white dark:hover:bg-gray-100 dark:text-gray-900 text-white font-semibold rounded-lg transition-colors duration-300;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .home-pods-grid {
      @apply grid-cols-1 gap-6;
    }
    
    .home-pod-card {
      @apply p-6;
    }
    
    .home-pods-title {
      @apply text-2xl md:text-3xl;
    }
  }
</style>

<script>
  // Component-specific animations
  import { initScrollAnimations } from '../../scripts/scrollAnimations.js';
  
  // Initialize scroll animations for this component
  document.addEventListener('DOMContentLoaded', () => {
    initScrollAnimations();
  });
</script> 