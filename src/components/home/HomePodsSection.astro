---
import { catalogUtils } from '../../content/catalog/_index.js';
import HomePodCard from './HomePodCard.astro';

export interface Props {
  data: {
    title: string;
    subtitle: string;
    featuredPodIds?: string[]; // Optional: specific pod IDs to display
  };
} 

const { data } = Astro.props;

// Get pods from centralized catalog
let pods: any[] = [];
if (data.featuredPodIds) {
  // Get specific pods by IDs
  pods = data.featuredPodIds.map(id => catalogUtils.getProductById(id, 'pod')).filter(Boolean);
} else {
  // Get all pods
  const allProducts = catalogUtils.getAllProducts().pods;
  pods = allProducts || [];
  console.log("ðŸš€ ~ pods:", pods)
}

const validPods = pods.filter(pod => 
  pod && 
  typeof pod === 'object' && 
  'id' in pod &&
  'name' in pod && 
  'tagline' in pod && 
  'idealFor' in pod && 
  'whatsInPod' in pod
) as Array<{
  id: string;
  name: string;
  tagline: string;
  idealFor: string[];
  whatsInPod: {
    description: string;
    teamComposition: string[];
    upgradeNote: string;
  };
  whatCanDo: string[];
  deliveryTimelines: string[];
  whyTrust: string[];
  pastUseCases: string[];
  pricing: string[];
}>;


---

<section id="pods-section" class="py-20 relative overflow-hidden">

  <div class="container mx-auto px-4 max-w-screen-2xl relative z-10">
    <!-- Section Header -->
    <div class="max-w-3xl mx-auto text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-manrope font-bold gradient-title mb-4">
        Ready-to-Deploy
        <span class="gradient-text"> Pods</span>
      </h2>
      <p class="text-lg text-graphite-600 leading-relaxed font-inter">
        {data.subtitle} {validPods.length}
      </p>
    </div>
    
    <!-- Pods Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
      {validPods?.slice(0, 6).map((pod, index) => (
        <HomePodCard pod={pod} index={index} />
      ))}
    </div>
    
    <!-- Explore All Pods Button -->
    <div class="text-center">
      <a 
        href="/explore-pods" 
        class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-white/80 to-white/60 backdrop-blur-md text-graphite-700 font-inter font-semibold rounded-xl border border-white/20 hover:from-white/90 hover:to-white/70 transition-all duration-300 hover:scale-105 shadow-sm hover:shadow-md group"
      >
        <span class="font-manrope">Explore All Pods</span>
        <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<script>
  // Scroll-triggered animations for pod cards
  function initScrollAnimations() {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const cardObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          // Add delay for staggered animation
          setTimeout(() => {
            entry.target.classList.add('animate');
          }, index * 100);
        }
      });
    }, observerOptions);

    // Observe all pod cards
    document.querySelectorAll('.pod-card').forEach(card => {
      cardObserver.observe(card);
    });
  }

  // Initialize animations when DOM is loaded
  document.addEventListener('DOMContentLoaded', initScrollAnimations);
</script>


