---
export interface Props {
  data: {
    title: string;
    subtitle: string;
    description: string;
    features: Array<{
      title: string;
      description: string;
    }>;
  };
}

const { data } = Astro.props;
---

<section class="py-16 bg-gradient-to-br from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20">
  <div class="container mx-auto px-4">
    <div class="max-w-4xl mx-auto text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-dark dark:text-white mb-4">{data.title}</h2>
      <p class="text-xl text-gray-600 dark:text-gray-400 mb-6">{data.subtitle}</p>
      <p class="text-lg text-gray-600 dark:text-gray-400">{data.description}</p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
      {data.features.map((feature, index) => (
        <div class="bg-white dark:bg-slate-800 rounded-2xl p-8 text-center">
          <h3 class="text-xl font-bold text-dark dark:text-white mb-4">{feature.title}</h3>
          <p class="text-gray-600 dark:text-gray-400">{feature.description}</p>
        </div>
      ))}
    </div>
    
    <div class="text-center mt-12">
      <a href="/contact" class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-blue-500 to-purple-600 text-white font-semibold rounded-xl hover:from-blue-600 hover:to-purple-700 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl">
        <span>Get Expert Guidance</span>
        <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </div>
</section> 