---
import HomeSuccessStoryCard from './HomeSuccessStoryCard.astro';

export interface Props {
  data: {
    title: string;
    subtitle: string;
    caseStudies?: Array<{
      title: string;
      engagement: string;
      success: string;
      client: string;
      challenge: string;
      outcome: string[];
      testimonial: {
        quote: string;
        author: string;
        role: string;
      };
      readMoreLink: string;
    }>;
    stories?: Array<{
      title: string;
      description: string;
      metric: string;
      metricLabel: string;
    }>;
  };
}

const { data } = Astro.props;

// Handle both old and new data formats
const caseStudies = data.caseStudies || [];
const stories = data.stories || [];

// Use case studies if available, otherwise fall back to stories
const displayData = caseStudies.length > 0 ? caseStudies : stories;
---

<section class="py-16">
  <div class="container mx-auto max-w-5xl px-4">
    <!-- Section Header -->
    <div class="max-w-3xl mx-auto text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4 gradient-title">
        {data.title}
      </h2>
      <p class="text-lg text-gray-600 leading-relaxed">
        {data.subtitle}
      </p>
    </div>
    
    <!-- Success Stories Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      {displayData.map((item: any, index) => (
        <HomeSuccessStoryCard item={item} index={index} />
      ))}
    </div>
  </div>
</section>

<script>
  // Scroll-triggered animations for success story cards
  function initScrollAnimations() {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const cardObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          // Add delay for staggered animation
          setTimeout(() => {
            entry.target.classList.add('animate');
          }, index * 100);
        }
      });
    }, observerOptions);

    // Observe all success story cards
    document.querySelectorAll('.success-story-card').forEach(card => {
      cardObserver.observe(card);
    });
  }

  // Initialize animations when DOM is loaded
  document.addEventListener('DOMContentLoaded', initScrollAnimations);
</script> 