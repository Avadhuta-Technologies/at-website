---
import DiscountedPriceDisplay from '../shared/DiscountedPriceDisplay.astro';
import { generatePackSlug } from '../../utils/slugUtils.js';

export interface Props {
  pack: {
    id: string;
    title: string;
    description: string;
    segmentName?: string;
    badge?: string;
    badgeColor?: string;
    basePriceINR: number;
    basePriceUSD: number;
    discountPercentage: number;
    duration: string;
    deliverables: string[];
    idealFor: string[];
    addOns: string[];
    whyItWorks: string;
    testimonials: Array<{
      quote: string;
      author: string;
      role: string;
    }>;
    cta: {
      title: string;
      subtitle: string;
      primaryButton: string;
      secondaryButton: string;
    };
  };
  index: number;
  className?: string;
}

const { pack, index, className = "" } = Astro.props;

// Helper function to get pack icon based on title
const getPackIcon = (pack: any) => {
  const title = pack.title.toLowerCase();
  
  if (title.includes('startup') || title.includes('accelerator')) return '🚀';
  if (title.includes('mvp') || title.includes('prototype')) return '⚡';
  if (title.includes('design') || title.includes('ui')) return '🎨';
  if (title.includes('development') || title.includes('build')) return '⚙️';
  if (title.includes('testing') || title.includes('qa')) return '🔍';
  if (title.includes('deployment') || title.includes('launch')) return '🚀';
  if (title.includes('maintenance') || title.includes('support')) return '🔧';
  if (title.includes('optimization') || title.includes('performance')) return '📈';
  if (title.includes('security') || title.includes('audit')) return '🔐';
  if (title.includes('analytics') || title.includes('insights')) return '📊';
  
  return '📦';
};

// Helper function to get pack color classes - using brand colors only (matching HomePodCard pattern)
const getPackColorClasses = (pack: any) => {
  const title = pack.title.toLowerCase();
  
  if (title.includes('startup') || title.includes('accelerator')) return 'bg-mint-100 border-mint-200 text-mint-700';
  if (title.includes('mvp') || title.includes('prototype')) return 'bg-cerulean-100 border-cerulean-200 text-cerulean-700';
  if (title.includes('design') || title.includes('ui')) return 'bg-graphite-100 border-graphite-200 text-graphite-700';
  if (title.includes('development') || title.includes('build')) return 'bg-mint-50 border-mint-100 text-mint-600';
  if (title.includes('testing') || title.includes('qa')) return 'bg-cerulean-50 border-cerulean-100 text-cerulean-600';
  if (title.includes('deployment') || title.includes('launch')) return 'bg-graphite-50 border-graphite-100 text-graphite-600';
  
  return 'bg-mint-100 border-mint-200 text-mint-700';
};

// Get icon color based on pack type - using brand colors only (matching HomePodCard pattern)
const getIconColor = (pack: any) => {
  const title = pack.title.toLowerCase();
  
  if (title.includes('startup') || title.includes('accelerator')) return 'text-mint-600';
  if (title.includes('mvp') || title.includes('prototype')) return 'text-cerulean-600';
  if (title.includes('design') || title.includes('ui')) return 'text-graphite-600';
  if (title.includes('development') || title.includes('build')) return 'text-mint-500';
  if (title.includes('testing') || title.includes('qa')) return 'text-cerulean-500';
  if (title.includes('deployment') || title.includes('launch')) return 'text-graphite-500';
  
  return 'text-mint-600';
};

// Helper function to get badge color classes - using brand colors only
const getBadgeColorClasses = (color: string) => {
  const colorMap: Record<string, string> = {
    'blue': 'bg-cerulean-100/90 text-cerulean-800 border-cerulean-200/50',
    'green': 'bg-mint-100/90 text-mint-800 border-mint-200/50',
    'purple': 'bg-graphite-100/90 text-graphite-800 border-graphite-200/50',
    'orange': 'bg-mint-50/90 text-mint-700 border-mint-100/50',
    'red': 'bg-graphite-50/90 text-graphite-700 border-graphite-100/50',
    'teal': 'bg-cerulean-50/90 text-cerulean-700 border-cerulean-100/50',
    'indigo': 'bg-graphite-100/90 text-graphite-800 border-graphite-200/50',
    'pink': 'bg-mint-50/90 text-mint-700 border-mint-100/50'
  };
  
  return colorMap[color] || colorMap['blue'];
};
---

<div class={`pack-card group relative overflow-hidden rounded-xl transition-all duration-300 hover:scale-105 hover:-translate-y-1 cursor-pointer ${className}`} data-pack-id={pack.id} data-pack-slug={generatePackSlug(pack.title)}>
  <!-- Card Background - Matching HomePodCard styling -->
  <div class="absolute inset-0 bg-white/90 backdrop-blur-sm border border-white/30 rounded-xl shadow-sm group-hover:shadow-xl transition-all duration-300"></div>
  
  <!-- Card Content -->
  <div class="relative p-6 flex flex-col h-full">
    <!-- Segment Name -->
    {pack.segmentName && (
      <div class="mb-4">
        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-inter font-medium bg-graphite-100/80 text-graphite-600 border border-graphite-200/50 backdrop-blur-sm">
          {pack.segmentName}
        </span>
      </div>
    )}
    
    <!-- Icon and Badge Row - Matching HomePodCard pattern -->
    <div class="flex items-start justify-between mb-5">
      <div class={`w-14 h-14 ${getPackColorClasses(pack)} rounded-xl flex items-center justify-center border group-hover:scale-110 transition-transform duration-300`}>
        <span class="text-2xl">{getPackIcon(pack)}</span>
      </div>
      {pack.badge && (
        <span class={`inline-flex items-center px-2.5 py-1 rounded-full text-xs font-inter font-medium border ${getBadgeColorClasses(pack.badgeColor || 'blue')}`}>
          {pack.badge}
        </span>
      )}
    </div>
    
    <!-- Title -->
    <h3 class="text-xl font-inter font-bold text-graphite-900 mb-4 group-hover:text-graphite-800 transition-colors duration-300 leading-tight">
      {pack.title}
    </h3>

    <!-- Description -->
    <div class="flex-1 mb-4">
      <p class="text-graphite-600 leading-relaxed font-inter text-sm">
        {pack.description}
      </p>
      <p class="text-xs font-inter text-graphite-500 mt-3">{pack.duration} delivery</p>
    </div>

    <!-- Updated Price Display -->
    <div class="mb-4">
      <DiscountedPriceDisplay 
        basePriceINR={pack.basePriceINR}
        basePriceUSD={pack.basePriceUSD}
        discountPercentage={pack.discountPercentage}
        showBadge={true}
        showSavings={true}
        showOriginalPrice={true}
        size="md"
        variant="conversion"
        itemType="pack"
      />
    </div>
    
    <!-- Action Buttons - Matching HomePodCard layout -->
    <div class="mt-auto flex items-center gap-3 pt-4 border-t border-graphite-100/50">
      <!-- Add to Pod Button -->
      <button 
        data-add-to-cart
        data-item-id={pack.id}
        data-item-type="pack"
        data-item-title={pack.title}
        data-item-description={pack.description}
        class="flex-1 inline-flex items-center justify-center px-4 py-2.5 bg-gradient-to-r from-mint-500 to-cerulean-500 text-white font-inter font-semibold rounded-lg hover:from-mint-600 hover:to-cerulean-600 transition-all duration-300 hover:scale-105 shadow-md hover:shadow-lg text-sm">
        <svg class="w-3.5 h-3.5 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
        </svg>
        <span class="cta-text">Add to Pod</span>
      </button>
      
      <!-- Details Link -->
      <a href={`/packs/${generatePackSlug(pack.title)}`} class="inline-flex items-center justify-center px-4 py-2.5 text-graphite-600 hover:text-graphite-700 font-inter font-semibold transition-colors border border-graphite-200 rounded-lg hover:bg-graphite-50 text-sm">
        Details
        <svg class="w-3.5 h-3.5 ml-1 group-hover:translate-x-0.5 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>
</div>

<style>
  /* Pack Card Animations - Matching HomePodCard */
  .pack-card {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .pack-card.animate {
    opacity: 1;
    transform: translateY(0);
  }

  /* Hover Effects - Matching HomePodCard */
  .pack-card:hover {
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .pack-card {
      padding: 1.5rem;
    }
  }
</style>

<script>
  // Import SummaryShared for cart operations
  import { SummaryShared } from '../../utils/summaryShared.js';

  // Interactive functionality for home pack cards - using event delegation
  document.addEventListener('DOMContentLoaded', async () => {
    const shared = new SummaryShared();
    
    // Initialize pack buttons with correct cart state
    await shared.initializePackButtons();
    
    // Add event listeners for pack cart operations using event delegation
    document.addEventListener('click', async (e) => {
      const target = e.target as HTMLElement;
      const packButton = target.closest('[data-add-to-cart][data-item-type="pack"]') as HTMLElement;
      
      if (packButton) {
        e.preventDefault();
        e.stopPropagation();
        
        const packId = packButton.getAttribute('data-item-id');
        if (packId) {
          await shared.handlePackCartOperation(packId, packButton);
        }
      }
    });
    
    // Listen for cart updates to refresh button states
    window.addEventListener('cart-updated', async () => {
      await shared.initializePackButtons();
    });
  });
</script>

 