---
import Layout from '../../layouts/Layout.astro';
import { getEntry } from 'astro:content';

export interface Props {
  podId: string;
}

const { podId } = Astro.props;

// Load pod data from markdown file
let podData = null;
try {
  const podFileMap = {
    'ecommerce-engine': 'ecommerce-engine-pod',
    'ar-vr-experience': 'ar-vr-experience-pod',
    'ai-product-studio': 'ai-product-studio-pod',
    'product-launch': 'product-launch-pod',
    'admin-workflow-automation': 'admin-workflow-automation-pod',
    'ai-ml-integration': 'ai-ml-integration-pod',
    'mobile-first-saas': 'mobile-first-saas-pod',
    'devops-infra-automation': 'devops-infra-automation-pod'
  };

  const fileName = podFileMap[podId as keyof typeof podFileMap];
  if (fileName) {
    const entry = await getEntry('pods', fileName as string);
    podData = entry?.data;
  }
} catch (error) {
  console.error('Error loading pod data:', error);
}

if (!podData) {
  return Astro.redirect('/404');
}

// Utility functions for styling
function getBadgeColor(color: string): string {
  const colorMap: Record<string, string> = {
    'green': 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300',
    'purple': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300',
    'blue': 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300',
    'orange': 'bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300',
    'indigo': 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900/30 dark:text-indigo-300',
    'teal': 'bg-teal-100 text-teal-800 dark:bg-teal-900/30 dark:text-teal-300',
    'pink': 'bg-pink-100 text-pink-800 dark:bg-pink-900/30 dark:text-pink-300',
    'gray': 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300'
  };
  return colorMap[color] || 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300';
}

function getGradientClass(color: string): string {
  const colorMap: Record<string, string> = {
    'green': 'from-green-400 to-emerald-500',
    'purple': 'from-purple-400 to-pink-500',
    'blue': 'from-blue-400 to-cyan-500',
    'orange': 'from-orange-400 to-red-500',
    'indigo': 'from-indigo-400 to-purple-500',
    'teal': 'from-teal-400 to-green-500',
    'pink': 'from-pink-400 to-purple-500',
    'gray': 'from-gray-400 to-gray-600'
  };
  return colorMap[color] || 'from-blue-400 to-cyan-500';
}
---

<Layout 
  title={`${podData.title} | NovaPod.ai`}
  description={podData.description}
>
  <!-- Hero Section -->
  <section class="py-16 bg-gradient-to-br from-gray-50 to-blue-50 dark:from-dark-2 dark:to-dark-3">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <!-- Badge -->
        <div class="inline-flex items-center mb-6">
          <span class={`text-xs px-3 py-1 rounded-full font-semibold ${getBadgeColor(podData.badgeColor)}`}>
            {podData.badge}
          </span>
        </div>
        
        <!-- Title -->
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 text-dark dark:text-white">
          {podData.title}
        </h1>
        
        <!-- Description -->
        <p class="text-xl text-gray-600 dark:text-gray-400 mb-8 max-w-3xl mx-auto leading-relaxed">
          {podData.description}
        </p>
        
        <!-- Ideal For -->
        <div class="mb-8">
          <h3 class="text-lg font-semibold text-gray-700 dark:text-gray-300 mb-4">Ideal For</h3>
          <div class="flex flex-wrap justify-center gap-2">
            {podData.idealFor.map((item: string) => (
              <span class="px-4 py-2 bg-white dark:bg-slate-800 rounded-full text-sm text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-slate-700">
                {item}
              </span>
            ))}
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- What's in the Pod Section -->
  <section class="py-16 bg-white dark:bg-slate-900">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <h2 class="text-3xl font-bold mb-8 text-dark dark:text-white">What's in the Pod?</h2>
        <p class="text-lg text-gray-600 dark:text-gray-400 mb-8">
          {podData.hero?.description || podData.description}
        </p>
        
        <!-- Team Composition -->
        <div class="mb-8">
          <h3 class="text-xl font-semibold mb-4 text-dark dark:text-white">ðŸ‘¥ Team Composition:</h3>
          <ul class="space-y-3">
            {podData.teamComposition.map((member: string) => (
              <li class="flex items-start text-gray-700 dark:text-gray-300">
                <span class="text-blue-500 mr-3 mt-1">â€¢</span>
                <span>{member}</span>
              </li>
            ))}
          </ul>
          {podData.upgradeNote && (
            <div class="mt-4 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
              <p class="text-sm text-blue-700 dark:text-blue-300">{podData.upgradeNote}</p>
            </div>
          )}
        </div>
      </div>
    </div>
  </section>

  <!-- What You Get Section -->
  <section class="py-16 bg-gray-50 dark:bg-slate-800">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <h2 class="text-3xl font-bold mb-8 text-dark dark:text-white">What You Get</h2>
        <div class="grid gap-4">
          {podData.deliverables.map((deliverable: string) => (
            <div class="flex items-start">
              <span class="text-green-500 mr-3 mt-1 text-xl">âœ…</span>
              <span class="text-gray-700 dark:text-gray-300">{deliverable}</span>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>

  <!-- Delivery Timelines Section -->
  <section class="py-16 bg-white dark:bg-slate-900">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <h2 class="text-3xl font-bold mb-8 text-dark dark:text-white">Delivery Timelines</h2>
        <div class="grid md:grid-cols-3 gap-6">
          {podData.process?.steps?.map((step: any) => (
            <div class="text-center p-6 bg-gray-50 dark:bg-slate-800 rounded-lg">
              <div class="text-2xl font-bold text-blue-600 dark:text-blue-400 mb-2">{step.number}</div>
              <div class="text-lg font-semibold text-gray-900 dark:text-white mb-2">{step.title}</div>
              <p class="text-gray-700 dark:text-gray-300">{step.description}</p>
            </div>
          ))}
        </div>
        <div class="text-center mt-6">
          <p class="text-sm text-gray-500 dark:text-gray-400">Agile. Transparent. Always shipping value.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Why Teams Trust This Pod Section -->
  <section class="py-16 bg-gray-50 dark:bg-slate-800">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <h2 class="text-3xl font-bold mb-8 text-dark dark:text-white">Why Teams Trust This Pod</h2>
        <div class="grid md:grid-cols-2 gap-6">
          {podData.features?.map((feature: any) => (
            <div class="flex items-start">
              <span class="text-blue-500 mr-3 mt-1">â€¢</span>
              <div>
                <span class="font-semibold text-gray-900 dark:text-white">{feature.title}: </span>
                <span class="text-gray-700 dark:text-gray-300">{feature.description}</span>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>

  <!-- Past Use Cases Section -->
  <section class="py-16 bg-white dark:bg-slate-900">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <h2 class="text-3xl font-bold mb-8 text-dark dark:text-white">Past Use Cases</h2>
        <div class="grid gap-4">
          {podData.pastUseCases?.map((useCase: string) => (
            <div class="flex items-start">
              <span class="text-green-500 mr-3 mt-1">â€¢</span>
              <span class="text-gray-700 dark:text-gray-300">{useCase}</span>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>

  <!-- Pricing Section -->
  <section class="py-16 bg-gradient-to-br from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-3xl font-bold mb-8 text-dark dark:text-white">Pricing</h2>
        <div class="bg-white dark:bg-slate-800 rounded-2xl p-8 shadow-lg">
          <div class="text-4xl font-bold text-dark dark:text-white mb-4">
            {podData.priceINR}
          </div>
          <div class="text-lg text-gray-600 dark:text-gray-400 mb-6">
            {podData.priceUSD}
          </div>
          <p class="text-gray-700 dark:text-gray-300 mb-8">
            {podData.engagement}
          </p>
          <button 
            class="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-semibold py-4 px-8 rounded-xl transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
            onclick="handleReservePod('${podId}')"
          >
            Reserve Pod
          </button>
        </div>
      </div>
    </div>
  </section>

  <!-- Add-on Packs Section -->
  <section class="py-16 bg-white dark:bg-slate-900">
    <div class="container mx-auto px-4">
      <div class="max-w-6xl mx-auto">
        <h2 class="text-3xl font-bold mb-4 text-dark dark:text-white">Add More Power to Your Pod</h2>
        <p class="text-lg text-gray-600 dark:text-gray-400 mb-8">
          Complete your project with these add-on Packs designed to accelerate outcomes, simplify launch, and enhance your product
        </p>
        
        <!-- Add-on Packs Grid -->
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          <!-- Web Presence Pack -->
          <div class="bg-white dark:bg-slate-800 rounded-xl p-6 shadow-lg border border-gray-200 dark:border-slate-700">
            <h3 class="text-xl font-semibold mb-3 text-dark dark:text-white">Web Presence Pack</h3>
            <p class="text-gray-600 dark:text-gray-400 mb-4">
              Create a sleek, responsive website to showcase your product. Landing page or multi-section site, basic CMS, mobile-first design, SEO ready.
            </p>
            <div class="flex justify-between items-center mb-4">
              <span class="text-sm text-gray-500">Duration: 2 weeks</span>
              <span class="text-lg font-semibold text-dark dark:text-white">â‚¹45,000 / $550</span>
            </div>
            <button 
              class="w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg transition-colors duration-300"
              onclick="handleAddPack('web-presence')"
            >
              Add To Pod
            </button>
          </div>
          
          <!-- Additional packs can be added here -->
        </div>
      </div>
    </div>
  </section>

  <!-- Final CTA Section -->
  <section class="py-16 bg-gradient-to-br from-gray-900 to-blue-900 text-white">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-3xl font-bold mb-4">Ready to Launch with This Pod?</h2>
        <p class="text-xl text-gray-300 mb-8">
          Let our {podData.title} hit the ground running while you focus on product and strategy. We'll own the code, the flow, and the velocity.
        </p>
        <button 
          class="bg-white text-gray-900 font-semibold py-4 px-8 rounded-xl transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
          onclick="handleReservePod('${podId}')"
        >
          Reserve Pod
        </button>
      </div>
    </div>
  </section>

  <script>
    function handleReservePod(podId: string) {
      console.log('Reserve pod clicked for:', podId);
      // Add your reservation logic here
      window.location.href = `/contact?pod=${podId}`;
    }

    function handleAddPack(packId: string) {
      console.log('Add pack clicked for:', packId);
      // Add your pack addition logic here
    }

    // Make functions globally available
    // @ts-ignore
    window.handleReservePod = handleReservePod;
    // @ts-ignore
    window.handleAddPack = handleAddPack;
  </script>
</Layout> 