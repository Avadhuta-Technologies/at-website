---
export interface Props {
  title: string;
  subtitle?: string;
  pods: Array<{
    id: string;
    title: string;
    description: string;
    icon: string;
    badge: string;
    badgeColor: string;
    teamComposition: string[];
    deliverables: string[];
    engagement: string;
    priceINR: string;
    priceUSD: string;
    isCustom?: boolean;
  }>;
  className?: string;
}

const { title, subtitle, pods, className = "" } = Astro.props;

// Utility functions
function getBadgeColorClass(color: string): string {
  const colorMap: Record<string, string> = {
    'blue': 'bg-blue-100 dark:bg-blue-900',
    'purple': 'bg-purple-100 dark:bg-purple-900',
    'orange': 'bg-orange-100 dark:bg-orange-900',
    'teal': 'bg-teal-100 dark:bg-teal-900',
    'green': 'bg-green-100 dark:bg-green-900',
    'indigo': 'bg-indigo-100 dark:bg-indigo-900',
    'cyan': 'bg-cyan-100 dark:bg-cyan-900'
  };
  return colorMap[color] || 'bg-blue-100 dark:bg-blue-900';
}

function getBadgeStyle(color: string, isCustom: boolean = false): string {
  if (isCustom) {
    return 'bg-gradient-to-r from-purple-500 to-pink-500 text-white font-semibold';
  }
  
  const colorMap: Record<string, string> = {
    'blue': 'bg-blue-100 text-blue-800',
    'purple': 'bg-purple-100 text-purple-800',
    'orange': 'bg-orange-100 text-orange-800',
    'teal': 'bg-teal-100 text-teal-800',
    'green': 'bg-green-100 text-green-800',
    'indigo': 'bg-indigo-100 text-indigo-800',
    'cyan': 'bg-cyan-100 text-cyan-800'
  };
  return colorMap[color] || 'bg-blue-100 text-blue-800';
}

function getDotColor(color: string): string {
  const colorMap: Record<string, string> = {
    'blue': 'bg-blue-500',
    'purple': 'bg-purple-500',
    'orange': 'bg-orange-500',
    'teal': 'bg-teal-500',
    'green': 'bg-green-500',
    'indigo': 'bg-indigo-500',
    'cyan': 'bg-cyan-500'
  };
  return colorMap[color] || 'bg-blue-500';
}

function getGradientClass(color: string, isCustom: boolean = false): string {
  if (isCustom) {
    return 'from-purple-500 via-pink-500 to-blue-500';
  }
  
  const colorMap: Record<string, string> = {
    'blue': 'from-blue-500 to-cyan-500',
    'purple': 'from-purple-500 to-pink-500',
    'orange': 'from-orange-500 to-red-500',
    'teal': 'from-teal-500 to-green-500',
    'green': 'from-green-500 to-emerald-500',
    'indigo': 'from-indigo-500 to-purple-500',
    'cyan': 'from-cyan-500 to-blue-500'
  };
  return colorMap[color] || 'from-blue-500 to-cyan-500';
}
---

<section class={`py-16 bg-gradient-to-br from-gray-50 to-blue-50 dark:from-dark-2 dark:to-dark-3 ${className}`}>
  <div class="container mx-auto px-4">
    <div class="max-w-4xl mx-auto text-center mb-16">
      <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-6 text-dark dark:text-white animate-fade-in-up">
        {title}
      </h2>
      <p class="text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto animate-fade-in-up animation-delay-200">
        Choose from our pre-configured, outcome-focused tech teams designed for specific project types
      </p>
    </div>
    
    <div class="grid gap-8 grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
      {pods.map((pod, index) => (
        <div class={`pod-card group relative bg-white dark:bg-dark rounded-2xl shadow-lg hover:shadow-2xl overflow-hidden flex flex-col h-full animate-fade-in-up animation-delay-${(index + 1) * 200}`}>
          {/* Gradient overlay for custom pods */}
          {pod.isCustom && (
            <>
              <div class="absolute inset-0 bg-gradient-to-br from-purple-600 via-pink-600 to-blue-600 opacity-5"></div>
              <div class="absolute inset-0 bg-gradient-to-tl from-cyan-500 via-blue-500 to-purple-600 opacity-3"></div>
            </>
          )}
          
          <div class="relative z-10 flex flex-col h-full p-8">
            {/* Header */}
            <div class="flex items-center justify-between mb-6">
              <div class={`w-16 h-16 rounded-2xl bg-gradient-to-r ${getGradientClass(pod.badgeColor, pod.isCustom)} flex items-center justify-center transform transition-all duration-300 group-hover:scale-110 group-hover:rotate-3 shadow-lg`}>
                <img src={pod.icon} alt={`${pod.title} Icon`} class="w-8 h-8 filter brightness-0 invert" />
              </div>
              <span class={`text-xs px-3 py-1 rounded-full font-semibold ${getBadgeStyle(pod.badgeColor, pod.isCustom)} transform transition-all duration-300 group-hover:scale-105`}>
                {pod.badge}
              </span>
            </div>
            
            {/* Title and Description */}
            <div class="mb-6">
              <h3 class="font-bold text-xl mb-3 text-dark dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-300">
                {pod.title}
              </h3>
              <p class="text-gray-600 dark:text-gray-400 leading-relaxed">
                {pod.description}
              </p>
            </div>
            
            {/* Team Composition */}
            <div class="mb-6">
              <h4 class="font-semibold text-sm text-gray-700 dark:text-gray-300 mb-3 flex items-center">
                <svg class="w-4 h-4 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                </svg>
                Team Composition
              </h4>
              <ul class="space-y-2">
                {pod.teamComposition.slice(0, 3).map((member) => (
                  <li class="flex items-start text-sm text-gray-600 dark:text-gray-400 group/item">
                    <span class={`w-2 h-2 rounded-full mr-3 mt-2 flex-shrink-0 ${pod.isCustom ? 'bg-gradient-to-r from-purple-500 to-pink-500' : getDotColor(pod.badgeColor)} transition-all duration-300 group-hover/item:scale-150`}></span>
                    <span class="leading-relaxed">{member}</span>
                  </li>
                ))}
                {pod.teamComposition.length > 3 && (
                  <li class="text-xs text-blue-600 dark:text-blue-400 font-medium">
                    +{pod.teamComposition.length - 3} more roles
                  </li>
                )}
              </ul>
            </div>
            
            {/* Deliverables */}
            <div class="mb-6">
              <h4 class="font-semibold text-sm text-gray-700 dark:text-gray-300 mb-3 flex items-center">
                <svg class="w-4 h-4 mr-2 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                Key Deliverables
              </h4>
              <ul class="space-y-2">
                {pod.deliverables.slice(0, 3).map((deliverable) => (
                  <li class="flex items-start text-sm text-gray-600 dark:text-gray-400 group/item">
                    <span class="w-2 h-2 bg-green-500 rounded-full mr-3 mt-2 flex-shrink-0 transition-all duration-300 group-hover/item:scale-150"></span>
                    <span class="leading-relaxed">{deliverable}</span>
                  </li>
                ))}
                {pod.deliverables.length > 3 && (
                  <li class="text-xs text-green-600 dark:text-green-400 font-medium">
                    +{pod.deliverables.length - 3} more deliverables
                  </li>
                )}
              </ul>
            </div>
            
            {/* Pricing and Engagement - Fixed at bottom */}
            <div class="mt-auto pt-6 border-t border-gray-100 dark:border-gray-700">
              <div class="flex items-center gap-2 mb-3">
                <span class={`text-xs px-3 py-1 rounded-full font-medium ${getBadgeStyle(pod.badgeColor, pod.isCustom)}`}>
                  <b>Engagement:</b> {pod.engagement}
                </span>
              </div>
              <div class="mb-4">
                <div class="font-bold text-2xl text-dark dark:text-white">{pod.priceINR}</div>
                <div class="font-semibold text-lg text-gray-600 dark:text-gray-400">{pod.priceUSD}</div>
              </div>
              
              {/* Action Buttons */}
              <div class="flex gap-3">
                <a href="#" class={`flex-1 text-center py-3 px-4 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105 ${pod.isCustom ? 'bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white shadow-lg hover:shadow-xl' : 'bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white shadow-lg hover:shadow-xl'}`}>
                  {pod.isCustom ? 'Free Discovery Call' : 'Book Now'}
                </a>
                <a href={`/pods/${pod.id}`} class={`flex-1 border-2 text-center py-3 px-4 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105 ${pod.isCustom ? 'border-purple-500 text-purple-600 hover:bg-purple-50 dark:hover:bg-purple-900/20' : 'border-blue-500 text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/20'}`}>
                  Details
                </a>
              </div>
            </div>
          </div>
          
          {/* Hover effect overlay */}
          <div class="absolute inset-0 bg-gradient-to-br from-blue-500/0 to-purple-500/0 group-hover:from-blue-500/5 group-hover:to-purple-500/5 transition-all duration-500 rounded-2xl"></div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .pod-card {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
  }

  .pod-card:hover {
    transform: translateY(-12px) scale(1.02);
    box-shadow: 0 32px 64px -12px rgba(0, 0, 0, 0.25);
  }

  .pod-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #3B82F6, #8B5CF6, #EC4899);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .pod-card:hover::before {
    opacity: 1;
  }

  /* Animation delays */
  .animation-delay-200 { animation-delay: 0.2s; }
  .animation-delay-400 { animation-delay: 0.4s; }
  .animation-delay-600 { animation-delay: 0.6s; }
  .animation-delay-800 { animation-delay: 0.8s; }
  .animation-delay-1000 { animation-delay: 1s; }
  .animation-delay-1200 { animation-delay: 1.2s; }
</style>

 