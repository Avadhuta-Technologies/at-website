---
export interface Props {
  title: string;
  pods: Array<{
    id: string;
    title: string;
    description: string;
    icon: string;
    badge: string;
    badgeColor: string;
    teamComposition: string[];
    deliverables: string[];
    engagement: string;
    priceINR: string;
    priceUSD: string;
    isCustom?: boolean;
  }>;
  className?: string;
}

const { title, pods, className = "" } = Astro.props;

// Utility functions
function getBadgeColorClass(color: string): string {
  const colorMap: Record<string, string> = {
    'blue': 'bg-blue-100 dark:bg-blue-900',
    'purple': 'bg-purple-100 dark:bg-purple-900',
    'orange': 'bg-orange-100 dark:bg-orange-900',
    'teal': 'bg-teal-100 dark:bg-teal-900',
    'green': 'bg-green-100 dark:bg-green-900'
  };
  return colorMap[color] || 'bg-blue-100 dark:bg-blue-900';
}

function getBadgeStyle(color: string, isCustom: boolean = false): string {
  if (isCustom) {
    return 'bg-gradient-to-r from-purple-500 to-pink-500 text-white font-semibold';
  }
  
  const colorMap: Record<string, string> = {
    'blue': 'bg-blue-100 text-blue-800',
    'purple': 'bg-purple-100 text-purple-800',
    'orange': 'bg-orange-100 text-orange-800',
    'teal': 'bg-teal-100 text-teal-800',
    'green': 'bg-green-100 text-green-800'
  };
  return colorMap[color] || 'bg-blue-100 text-blue-800';
}

function getDotColor(color: string): string {
  const colorMap: Record<string, string> = {
    'blue': 'bg-blue-500',
    'purple': 'bg-purple-500',
    'orange': 'bg-orange-500',
    'teal': 'bg-teal-500',
    'green': 'bg-green-500'
  };
  return colorMap[color] || 'bg-blue-500';
}
---

<section class={`py-12 bg-gray-1 dark:bg-dark-2 ${className}`}>
  <div class="container mx-auto px-4">
    <div class="max-w-2xl mx-auto text-center mb-10">
      <h2 class="text-2xl md:text-3xl font-bold mb-6 text-dark dark:text-white">{title}</h2>
    </div>
    <div class="grid gap-8 grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
      {pods.map((pod) => (
        <div class={`bg-white dark:bg-dark rounded-2xl shadow-lg p-6 flex flex-col hover:-translate-y-2 transition duration-300 cursor-pointer ${pod.isCustom ? 'relative overflow-hidden' : ''}`}>
          {pod.isCustom && (
            <>
              <div class="absolute inset-0 bg-gradient-to-br from-purple-600 via-pink-600 to-blue-600 opacity-10"></div>
              <div class="absolute inset-0 bg-gradient-to-tl from-cyan-500 via-blue-500 to-purple-600 opacity-5"></div>
            </>
          )}
          
          <div class={pod.isCustom ? 'relative z-10' : ''}>
            <div class="flex items-center justify-between mb-4">
              <div class={`w-12 h-12 rounded-full ${pod.isCustom ? 'bg-gradient-to-r from-purple-500 to-pink-500' : getBadgeColorClass(pod.badgeColor)} flex items-center justify-center`}>
                <img src={pod.icon} alt={`${pod.title} Icon`} class="w-6 h-6" />
              </div>
              <span class={`text-xs px-2 py-1 rounded-full ${getBadgeStyle(pod.badgeColor, pod.isCustom)}`}>
                {pod.badge}
              </span>
            </div>
            
            <h3 class="font-bold text-lg mb-2 text-dark dark:text-white">{pod.title}</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">{pod.description}</p>
            
            <div class="space-y-3 mb-4">
              <div>
                <h4 class="font-semibold text-xs text-gray-700 dark:text-gray-300 mb-1">Team Composition</h4>
                <ul class="text-xs text-gray-600 dark:text-gray-400 space-y-1">
                  {pod.teamComposition.map((member) => (
                    <li class="flex items-center">
                      <span class={`w-1 h-1 rounded-full mr-2 ${pod.isCustom ? 'bg-gradient-to-r from-purple-500 to-pink-500' : getDotColor(pod.badgeColor)}`}></span>
                      {member}
                    </li>
                  ))}
                </ul>
              </div>
              <div>
                <h4 class="font-semibold text-xs text-gray-700 dark:text-gray-300 mb-1">Deliverables</h4>
                <ul class="text-xs text-gray-600 dark:text-gray-400 space-y-1">
                  {pod.deliverables.map((deliverable) => (
                    <li class="flex items-center">
                      <span class="w-1 h-1 bg-green-500 rounded-full mr-2"></span>
                      {deliverable}
                    </li>
                  ))}
                </ul>
              </div>
            </div>
            
            <div class="mt-auto">
              <div class="flex items-center gap-2 mb-2">
                <span class={`text-xs px-2 py-1 rounded-full font-medium ${getBadgeStyle(pod.badgeColor, pod.isCustom)}`}>
                  <b>Engagement :</b> {pod.engagement}
                </span>
              </div>
              <div class="font-bold text-lg mb-1 text-dark dark:text-white">{pod.priceINR}</div>
              <div class="font-bold text-lg mb-3 text-dark dark:text-white">{pod.priceUSD}</div>
              <div class="flex gap-2">
                <a href="#" class={`flex-1 text-center py-2 px-4 rounded-lg transition ${pod.isCustom ? 'bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white' : 'bg-primary text-white hover:bg-blue-600'}`}>
                  {pod.isCustom ? 'Free Discovery Call' : 'Book Now'}
                </a>
                <a href={`/pods/${pod.id}`} class={`flex-1 border text-center py-2 px-4 rounded-lg transition ${pod.isCustom ? 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600' : 'border-primary text-primary hover:bg-primary hover:text-white'}`}>
                  Details
                </a>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

 