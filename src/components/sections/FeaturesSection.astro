---
export interface Props {
  title: string;
  image: string;
  items: string[];
  className?: string;
}

const { title, image, items, className = "" } = Astro.props;
---

<section class={`py-16 md:py-24 bg-gradient-to-br from-white to-gray-50 dark:from-dark dark:to-dark-2 ${className}`}>
  <div class="container mx-auto px-4">
    <div class="flex flex-col md:flex-row items-center gap-12 md:gap-16">
      <!-- Left: Abstract Image with Colored Background -->
      <div class="relative w-full md:w-1/2 flex justify-center mb-8 md:mb-0 min-h-[256px] animate-fade-in-up">
        <div class="absolute top-8 left-8 w-64 h-64 bg-gradient-to-br from-blue-100 to-purple-100 rounded-2xl z-0 hidden md:block transform transition-all duration-500 hover:scale-105 hover:rotate-3"></div>
        <div class="relative z-10 w-64 h-64 flex items-center justify-center transform transition-all duration-500 hover:scale-110">
          <img src={image} alt="Abstract AI" class="w-full h-full object-contain filter drop-shadow-lg" />
        </div>
        
        {/* Floating elements */}
        <div class="absolute top-4 right-4 w-8 h-8 bg-gradient-to-r from-blue-400 to-cyan-400 rounded-full opacity-60 animate-pulse"></div>
        <div class="absolute bottom-4 left-4 w-6 h-6 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full opacity-40 animate-bounce"></div>
      </div>
      
      <!-- Right: Content -->
      <div class="w-full md:w-1/2 animate-fade-in-up animation-delay-200">
        <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-8 text-dark dark:text-white">
          {title}
        </h2>
        <ul class="mb-8 space-y-4">
          {items.map((item, index) => (
            <li class="feature-item flex items-start text-gray-700 dark:text-gray-200 text-lg leading-relaxed group transform transition-all duration-300 hover:translate-x-2">
              <div class="w-6 h-6 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mr-4 mt-1 flex-shrink-0 transform transition-all duration-300 group-hover:scale-110 group-hover:rotate-12">
                <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" stroke-width="3" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M5 13l4 4L19 7"/>
                </svg>
              </div>
              <span class="group-hover:text-gray-900 dark:group-hover:text-white transition-colors duration-300">
                {item}
              </span>
            </li>
          ))}
        </ul>
        
        {/* Call to action */}
        <div class="mt-8 p-6 bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-2xl border border-blue-100 dark:border-blue-800 transform transition-all duration-500 hover:scale-105 hover:shadow-lg">
          <div class="flex items-center">
            <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center mr-4">
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
            </div>
            <div>
              <p class="font-semibold text-gray-900 dark:text-white">Ready to get started?</p>
              <p class="text-sm text-gray-600 dark:text-gray-400">Book a free consultation to discuss your project</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .feature-item {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .feature-item:hover {
    transform: translateX(8px);
  }

  /* Animation delays */
  .animation-delay-200 { animation-delay: 0.2s; }
  .animation-delay-400 { animation-delay: 0.4s; }
  .animation-delay-600 { animation-delay: 0.6s; }

  /* Fade in animations */
  .animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style> 