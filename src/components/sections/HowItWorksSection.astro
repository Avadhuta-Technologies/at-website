---
interface Props {
  title: string;
  steps: Array<{
    number: string;
    title: string;
    description: string;
    features: string[];
    technologies: string[];
    duration: string;
    deliverables: string[];
  }>;
  className?: string;
}

const { title, steps, className = "" } = Astro.props;
---

<section class={`py-20 bg-gradient-to-br from-gray-50 to-white ${className}`}>
  <div class="container mx-auto px-4">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-bold text-center mb-12 text-dark gradient-title">{title}</h2>
    </div>

    <!-- Steps Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {steps.map((step, index) => (
        <div class="bg-white rounded-2xl shadow-lg p-6 h-full transition-all duration-500 hover:shadow-2xl hover:-translate-y-2 relative overflow-hidden cursor-pointer border border-gray-100 flex flex-col group">
          
          
          <!-- Corner Accent -->
          <div class="absolute bottom-0 right-0 w-20 h-20 bg-gradient-to-tl from-gray-100/15 via-transparent to-transparent rounded-tl-2xl"></div>
          
          <!-- Content -->
          <div class="relative z-10 flex-1">
            <!-- Step Number -->
            <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300">
              <span class="text-white font-bold text-lg">{step.number}</span>
            </div>
            
            <!-- Step Title -->
            <h3 class="text-lg font-bold text-dark group-hover:text-blue-600 transition-colors duration-300 mb-4">
              {step.title}
            </h3>
            
            <!-- Step Description -->
            <div class="text-gray-600 text-sm leading-relaxed description-text mb-4">
              {step.description}
            </div>
            
            <!-- Duration -->
            <div class="bg-gradient-to-r from-blue-50/80 to-purple-50/80 rounded-xl p-4 border border-blue-200/50 list-section">
              <div class="text-gray-700 text-sm leading-relaxed">
                <div class="flex items-center mb-2">
                  <svg class="w-4 h-4 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div class="font-semibold text-blue-700 mb-2 text-base">
                    Duration: {step.duration}
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Features -->
            {step.features.length > 0 && (
              <div class="mt-4">
                <h4 class="font-semibold text-sm text-gray-700 mb-2">Key Activities:</h4>
                <div class="text-gray-600 text-sm leading-relaxed">
                  <ul class="space-y-1">
                    {step.features.map(feature => (
                      <li class="flex items-start">
                        <svg class="w-3 h-3 mr-2 mt-1 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        {feature}
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            )}
          </div>
        </div>
      ))}
    </div>
  </div>
</section> 