---
import { portfolioProjectsData, portfolioCategories, portfolioIndustries } from '../../content/portfolio/_projects.js';

interface Props {
  data?: {
    title?: string;
    subtitle?: string;
    projects?: any[];
    categories?: string[];
  };
  className?: string;
}

const { 
  data = {
    title: "Our Projects",
    subtitle: "Showcasing our expertise across different industries and technologies",
    projects: portfolioProjectsData,
    categories: portfolioCategories
  },
  className = "" 
} = Astro.props;

const { title, subtitle, projects = [], categories = [] } = data;
---

<section class={`pt-4 pb-2 ${className}`}>
  <div class="container mx-auto px-4">
    
    <!-- Filter Tabs -->
    <div class="flex flex-wrap justify-center gap-4 mb-12">
      {categories.map((category: string) => (
        <button 
          class="portfolio-filter-btn" 
          data-category={category}
          data-filter="category"
        >
          {category}
        </button>
      ))}
    </div>
    
    <!-- Projects Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
      {projects.map((project: any, index: number) => (
        <div class="group bg-white rounded-xl border border-gray-200 shadow-sm hover:shadow-md transition-all duration-300 hover:-translate-y-1" data-project-id={project.id} data-category={project.category} data-industry={project.industry}>
          <!-- Card Header -->
          <div class="p-6 border-b border-gray-100">
            <div class="flex items-start justify-between mb-4">
              <div class="w-12 h-12 bg-blue-50 rounded-lg flex items-center justify-center">
                <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                </svg>
              </div>
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                {project.category}
              </span>
            </div>
            
            <h3 class="text-xl font-semibold text-gray-900 mb-2">
              {project.title}
            </h3>
            
            <div class="flex items-baseline space-x-2 mb-3">
              <span class="text-sm font-medium text-gray-500">
                {project.industry}
              </span>
            </div>
          </div>
          
          <!-- Card Body -->
          <div class="p-6">
            <p class="text-gray-600 mb-6 leading-relaxed">
              {project.description}
            </p>
            
            <!-- Technologies List -->
            <div class="space-y-3 mb-6">
              <h4 class="text-sm font-semibold text-gray-900 mb-2">Technologies:</h4>
              <div class="flex flex-wrap gap-2">
                {project.technologies.slice(0, 4).map((tech: string) => (
                  <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-gray-100 text-gray-700">
                    {tech}
                  </span>
                ))}
                {project.technologies.length > 4 && (
                  <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-gray-100 text-gray-700">
                    +{project.technologies.length - 4} more
                  </span>
                )}
              </div>
            </div>
            
            <!-- Impact Section -->
            <div class="bg-green-50 rounded-lg p-4 mb-6">
              <h4 class="text-sm font-semibold text-green-800 mb-2">Impact:</h4>
              <p class="text-sm text-green-700 leading-relaxed">
                {project.impact}
              </p>
            </div>
            
            
          </div>
        </div>
      ))}
    </div>
    
    
  </div>
</section>

<style>
  .portfolio-filter-btn {
    @apply px-4 py-2 text-sm font-medium rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors duration-200;
  }
  
  .portfolio-filter-btn.active {
    @apply bg-primary-600 text-white border-primary-600 hover:bg-primary-700;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .portfolio-projects-grid {
      @apply grid-cols-1 gap-6;
    }
    
    .portfolio-project-card {
      @apply p-6;
    }
    
    .portfolio-projects-title {
      @apply text-2xl md:text-3xl;
    }
  }
</style>

<script>
  // Filter functionality
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('[data-filter]');
    const projectCards = document.querySelectorAll('[data-project-id]');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const filterType = button.getAttribute('data-filter');
        const filterValue = button.getAttribute('data-category');
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');
        
        // Filter projects
        projectCards.forEach(card => {
          const cardValue = card.getAttribute(`data-${filterType}`);
          
          if (filterValue === 'All' || cardValue === filterValue) {
            (card as HTMLElement).style.display = 'block';
            card.classList.add('animate-fade-in');
          } else {
            (card as HTMLElement).style.display = 'none';
            card.classList.remove('animate-fade-in');
          }
        });
      });
    });
  });
  
  // Animation classes
  const style = document.createElement('style') as HTMLStyleElement;
  style.textContent = `
    .animate-fade-in {
      animation: fadeIn 0.5s ease-in-out;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
  `;
  document.head.appendChild(style);
</script> 