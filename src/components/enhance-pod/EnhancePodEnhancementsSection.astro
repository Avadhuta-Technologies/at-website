---
export interface Props {
  data: {
    title: string;
    subtitle: string;
    enhancements: Array<{
      id: string;
      title: string;
      description: string;
      price: string;
      priceUSD: string;
      benefits: string[];
      icon: string;
      color: string;
    }>;
  };
}

const { data } = Astro.props;

// Color mapping for different enhancement types
const getColorClasses = (color: string) => {
  const colorMap: Record<string, { bg: string; border: string; text: string }> = {
    blue: { bg: 'bg-primary-600', border: 'border-primary-500', text: 'text-primary-600' },
    purple: { bg: 'bg-purple-600', border: 'border-purple-500', text: 'text-purple-600' },
    green: { bg: 'bg-green-600', border: 'border-green-500', text: 'text-green-600' },
    pink: { bg: 'bg-pink-600', border: 'border-pink-500', text: 'text-pink-600' },
    orange: { bg: 'bg-orange-600', border: 'border-orange-500', text: 'text-orange-600' },
    teal: { bg: 'bg-teal-600', border: 'border-teal-500', text: 'text-teal-600' }
  };
  return colorMap[color] || colorMap.blue;
};
---

<section class="py-16 bg-white">
  <div class="container mx-auto px-4">
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">{data.title}</h2>
      <p class="text-lg text-gray-600">{data.subtitle}</p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {data.enhancements.map((enhancement, index) => {
        const colors = getColorClasses(enhancement.color);
        return (
          <div class="bg-white rounded-2xl shadow-lg border border-gray-200 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2">
            <div class="p-6">
              <div class="flex items-center mb-4">
                <div class={`w-12 h-12 ${colors.bg} rounded-xl flex items-center justify-center mr-4`}>
                  <span class="text-2xl text-white">{enhancement.icon}</span>
                </div>
                <div>
                  <h3 class="text-xl font-bold text-gray-900">{enhancement.title}</h3>
                  <div class="text-2xl font-bold text-gray-900">{enhancement.price}</div>
                  <div class="text-sm text-gray-500">{enhancement.priceUSD}</div>
                </div>
              </div>
              
              <p class="text-gray-600 mb-6">{enhancement.description}</p>
              
              <ul class="space-y-3 mb-6">
                {enhancement.benefits.map((benefit) => (
                  <li class="flex items-start text-sm">
                    <svg class="w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-600">{benefit}</span>
                  </li>
                ))}
              </ul>
              
              <button 
                data-add-to-cart
                data-item-id={enhancement.id}
                data-item-type="enhancement"
                data-item-title={enhancement.title}
                data-item-description={enhancement.description}
                data-item-price={enhancement.price}
                class={`w-full ${colors.bg} hover:opacity-90 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-300`}>
                Add to Cart
              </button>
            </div>
          </div>
        );
      })}
    </div>
  </div>
</section> 