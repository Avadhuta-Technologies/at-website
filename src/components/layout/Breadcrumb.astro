---
export interface Props {
  title: string;
  items?: Array<{
    label: string;
    url: string;
  }>;
  className?: string;
}

const { title, items = [], className = "" } = Astro.props;
---

<section class="relative z-10 overflow-hidden pt-[120px] pb-[60px] md:pt-[130px] lg:pt-[160px]">
  <div class="container mx-auto px-4">
    <div class="relative">
      <div class="w-full h-px bg-gradient-to-r from-stroke/0 via-stroke to-stroke/0 absolute left-0 bottom-0"></div>
      
      <div class="text-center">
        <h1 class="mb-5 text-3xl font-bold text-dark sm:text-4xl md:text-[40px] md:leading-[1.2]">
          {title}
        </h1>
        
        {items.length > 0 && (
          <nav class="flex items-center justify-center space-x-2 text-sm">
            <a href="/" class="text-body-color hover:text-primary transition-colors">
              Home
            </a>
            {items.map((item, index) => (
              <>
                <span class="text-body-color"> / </span>
                {index === items.length - 1 ? (
                  <span class="text-dark font-medium">{item.label}</span>
                ) : (
                  <a href={item.url} class="text-body-color hover:text-primary transition-colors">
                    {item.label}
                  </a>
                )}
              </>
            ))}
          </nav>
        )}
      </div>
    </div>
  </div>
</section>