---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const pods = await getCollection('pods');
  return pods.map((pod) => ({
    params: { slug: pod.data.id },
    props: { pod },
  }));
}

const { pod } = Astro.props;
const { Content } = await pod.render();
---

<Layout title={pod.data.title} description={pod.data.description}>
  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 overflow-hidden">
    <div class="absolute inset-0">
      <div class="absolute top-20 left-10 w-32 h-32 bg-gradient-to-r from-blue-400 to-cyan-400 rounded-full opacity-20 animate-pulse"></div>
      <div class="absolute top-40 right-20 w-24 h-24 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full opacity-30 animate-bounce"></div>
      <div class="absolute bottom-20 left-1/4 w-20 h-20 bg-gradient-to-r from-green-400 to-blue-400 rounded-full opacity-25 animate-ping"></div>
    </div>

    <div class="relative z-10 container mx-auto px-4 py-20 md:py-32">
      <div class="max-w-4xl mx-auto text-center">
        {pod.data.badge && (
          <div class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-purple-500 to-pink-500 text-white text-sm font-semibold rounded-full mb-8 animate-fade-in">
            {pod.data.badge}
          </div>
        )}

        <h1 class="text-4xl md:text-6xl lg:text-7xl font-bold text-white mb-6 leading-tight animate-fade-in-up">
          <span class="bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent">
            {pod.data.hero.title}
          </span>
        </h1>
        
        <h2 class="text-xl md:text-2xl lg:text-3xl font-medium text-gray-300 mb-8 animate-fade-in-up animation-delay-200">
          {pod.data.hero.subtitle}
        </h2>

        

        <div class="flex flex-col sm:flex-row gap-4 justify-center items-center mb-16 animate-fade-in-up animation-delay-600">
          <a href="#contact" class="group relative px-8 py-4 bg-gradient-to-r from-blue-500 to-purple-600 text-white font-semibold rounded-xl hover:from-blue-600 hover:to-purple-700 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl">
            <span class="relative z-10">{pod.data.cta.buttonText}</span>
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Ideal For Section -->
  <section class="py-16 bg-white">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <div class="text-center mb-12">
          <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900">Ideal For</h2>
          <p class="text-lg text-gray-600">Perfect for teams and businesses looking for specialized expertise</p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          {pod.data.idealFor.map((item, index) => (
            <div class="group relative bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-8 border border-blue-100 transform transition-all duration-500 hover:scale-105 hover:shadow-2xl hover:border-blue-300 hover:from-blue-100 hover:to-indigo-100">
              <div class="absolute top-4 right-4 w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300">
                <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
              <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center mr-4 transform transition-all duration-300 group-hover:scale-110 group-hover:rotate-3">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                  </svg>
                </div>
                <span class="font-bold text-gray-900 text-lg">Perfect Match</span>
              </div>
              <p class="text-gray-700 text-lg leading-relaxed">{item}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>

  <!-- What's in the Pod Section -->
  <section class="py-16 bg-gray-50">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <div class="text-center mb-12">
          <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900">What's in the Pod?</h2>
          <p class="text-lg md:text-xl text-gray-400 mb-12 max-w-3xl mx-auto leading-relaxed animate-fade-in-up animation-delay-400">
            {pod.data.hero.description}
          </p>
        </div>
        
        <div class="bg-white rounded-2xl shadow-lg p-8 transform transition-all duration-700 hover:shadow-2xl hover:-translate-y-2">
          <h3 class="text-2xl font-bold mb-8 text-gray-900 flex items-center">
            <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center mr-4">
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
              </svg>
            </div>
            Team Composition
          </h3>
          <div class="space-y-4">
            {pod.data.teamComposition.map((member, index) => (
              <div class="flex items-start transform transition-all duration-300 hover:translate-x-2 group">
                <div class="w-3 h-3 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full mt-3 mr-4 flex-shrink-0 transition-all duration-300 group-hover:scale-150 group-hover:shadow-lg"></div>
                <div class="flex-1 bg-gray-50 rounded-lg p-4 border-l-4 border-blue-500 transition-all duration-300 group-hover:bg-blue-50 group-hover:border-blue-600">
                  <p class="text-gray-700 font-medium">{member}</p>
                </div>
              </div>
            ))}
          </div>
          
          {pod.data.upgradeNote && (
            <div class="mt-8 p-6 bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl border border-purple-200 transform transition-all duration-500 hover:scale-105 hover:shadow-lg">
              <div class="flex items-center">
                <div class="w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center mr-4">
                  <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                  </svg>
                </div>
                <p class="text-purple-800 font-semibold text-lg">{pod.data.upgradeNote}</p>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  </section>

  <!-- What You Get Section -->
  <section class="py-16 bg-white">
    <div class="container mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900">What You Get</h2>
        <p class="text-lg text-gray-600">Comprehensive solutions tailored to your needs</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
        {pod.data.deliverables.map((deliverable, index) => (
          <div class="group relative bg-gradient-to-br from-green-50 to-emerald-50 rounded-2xl p-8 border border-green-200 transform transition-all duration-500 hover:scale-105 hover:shadow-2xl hover:border-green-400 hover:from-green-100 hover:to-emerald-100 hover:-translate-y-2">
            <div class="absolute top-4 right-4 w-8 h-8 bg-gradient-to-r from-green-500 to-emerald-600 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300">
              <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
            </div>
            <div class="flex items-center mb-4">
              <div class="w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-600 rounded-xl flex items-center justify-center mr-4 transform transition-all duration-300 group-hover:scale-110 group-hover:rotate-3">
                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
              </div>
              <span class="font-bold text-gray-900 text-lg">Included</span>
            </div>
            <p class="text-gray-700 text-lg leading-relaxed">{deliverable}</p>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Features Section -->
  <section class="py-16 bg-gray-50">
    <div class="container mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900">Why Teams Trust This Pod</h2>
        <p class="text-lg text-gray-600">Proven expertise and reliable delivery</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 max-w-6xl mx-auto">
        {pod.data.features.map((feature, index) => (
          <div class="bg-white rounded-xl p-6 shadow-lg transform transition-all duration-500 hover:scale-105 hover:shadow-2xl hover:-translate-y-2">
            <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center mb-4 transform transition-all duration-300 group-hover:scale-110 group-hover:rotate-3">
              <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
            </div>
            <h3 class="text-lg font-semibold mb-2 text-gray-900">{feature.title}</h3>
            <p class="text-gray-600">{feature.description}</p>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Process Section -->
  <section class="py-16 bg-white">
    <div class="container mx-auto px-4">
      <div class="text-center mb-16">
        <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900">{pod.data.process.title}</h2>
      </div>
      
      <div class="max-w-4xl mx-auto">
        <div class="relative">
          {/* Timeline line */}
          <div class="absolute left-8 top-0 bottom-0 w-0.5 bg-gradient-to-b from-blue-500 to-purple-600"></div>
          
          {pod.data.process.steps.map((step, index) => (
            <div class="relative flex items-center mb-12 last:mb-0">
              {/* Timeline dot */}
              <div class="absolute left-6 w-4 h-4 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full border-4 border-white shadow-lg transform -translate-x-2"></div>
              
              {/* Content */}
              <div class="ml-16 flex-1">
                <div class="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-8 border border-blue-200 transform transition-all duration-500 hover:scale-105 hover:shadow-xl hover:from-blue-100 hover:to-purple-100">
                  <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mr-4 text-white font-bold text-xl">
                      {step.number}
                    </div>
                    <h3 class="text-xl font-bold text-gray-900">{step.title}</h3>
                  </div>
                  <p class="text-gray-700 text-lg leading-relaxed">{step.description}</p>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>

  <!-- Past Use Cases Section -->
  <section class="py-16 bg-gray-50">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <div class="text-center mb-12">
          <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900">Past Use Cases</h2>
          <p class="text-lg text-gray-600">Real projects we've delivered with this pod</p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {pod.data.pastUseCases.map((useCase, index) => (
            <div class="bg-white rounded-xl p-6 shadow-lg transform transition-all duration-500 hover:scale-105 hover:shadow-xl hover:-translate-y-2">
              <div class="flex items-center mb-3">
                <svg class="w-5 h-5 text-blue-500 mr-3 transition-transform duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span class="font-semibold text-gray-900">Case Study</span>
              </div>
              <p class="text-gray-700">{useCase}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>

  <!-- Pricing Section -->
  <section class="py-16 bg-white">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900">Pricing</h2>
        <p class="text-lg text-gray-600 mb-8">Transparent pricing with no hidden costs</p>
        
        <div class="bg-gradient-to-r from-blue-600 to-purple-700 rounded-2xl p-8 text-white transform transition-all duration-500 hover:scale-105 hover:shadow-2xl">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
            <div>
              <h3 class="text-2xl font-bold mb-4">Starting at</h3>
              <div class="text-4xl font-bold mb-2">{pod.data.priceINR}</div>
              <div class="text-xl opacity-90 mb-4">{pod.data.priceUSD}</div>
              <p class="text-blue-100">Includes dev, design, QA, infrastructure, and deployment</p>
            </div>
            <div class="text-left">
              <h4 class="text-lg font-semibold mb-3">What's included:</h4>
              <ul class="space-y-2 text-blue-100">
                <li class="flex items-center">
                  <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  Full development team
                </li>
                <li class="flex items-center">
                  <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  Design & UX
                </li>
                <li class="flex items-center">
                  <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  Quality assurance
                </li>
                <li class="flex items-center">
                  <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  Infrastructure setup
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="py-20 bg-gradient-to-r from-blue-600 to-purple-700">
    <div class="container mx-auto px-4 text-center">
      <div class="max-w-4xl mx-auto">
        <h2 class="text-3xl md:text-4xl font-bold text-white mb-6">{pod.data.cta.title}</h2>
        <p class="text-xl text-blue-100 mb-8">{pod.data.cta.description}</p>
        <a href="#contact" class="inline-block px-8 py-4 bg-white text-blue-600 font-semibold rounded-xl hover:bg-gray-100 transition-all duration-300 transform hover:scale-105 shadow-lg">
          {pod.data.cta.buttonText}
        </a>
      </div>
    </div>
  </section>

  
</Layout>

<style>
  /* Accordion styles */
  .accordion-content {
    transition: all 0.3s ease-in-out;
    overflow: hidden;
  }
  
  .accordion-content.hidden {
    max-height: 0;
    opacity: 0;
  }
  
  .accordion-content.open {
    max-height: 200px;
    opacity: 1;
  }

  /* Fade in animations */
  .animate-fade-in {
    animation: fadeIn 0.8s ease-out;
  }

  .animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-400 {
    animation-delay: 0.4s;
  }

  .animation-delay-600 {
    animation-delay: 0.6s;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Enhanced hover effects */
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1);
  }

  .group:hover .group-hover\:rotate-3 {
    transform: rotate(3deg);
  }

  .group:hover .group-hover\:scale-150 {
    transform: scale(1.5);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Accordion functionality
    const accordionButtons = document.querySelectorAll('[data-accordion]');
    
    accordionButtons.forEach(button => {
      button.addEventListener('click', () => {
        const content = button.nextElementSibling;
        const icon = button.querySelector('svg');
        
        if (!content || !icon) return;
        
        const isOpen = content.classList.contains('open');
        
        document.querySelectorAll('.accordion-content').forEach(item => {
          if (item !== content) {
            item.classList.remove('open');
            item.classList.add('hidden');
          }
        });
        
        document.querySelectorAll('[data-accordion] svg').forEach(svg => {
          if (svg !== icon) {
            (svg as HTMLElement).style.transform = 'rotate(0deg)';
            svg.classList.remove('text-blue-500');
          }
        });
        
        if (isOpen) {
          content.classList.remove('open');
          content.classList.add('hidden');
          icon.style.transform = 'rotate(0deg)';
          icon.classList.remove('text-blue-500');
        } else {
          content.classList.remove('hidden');
          content.classList.add('open');
          icon.style.transform = 'rotate(90deg)';
          icon.classList.add('text-blue-500');
        }
      });
    });

    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (this: HTMLAnchorElement, e) {
        e.preventDefault();
        const href = this.getAttribute('href');
        if (href) {
          const target = document.querySelector(href);
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        }
      });
    });
  });
</script> 