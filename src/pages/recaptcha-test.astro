---
import Layout from '../layouts/Layout.astro';
import SimpleRecaptchaWidget from '../components/shared/SimpleRecaptchaWidget.astro';
import { getSiteKey } from '../config/recaptcha';
---

<Layout title="reCAPTCHA Test" description="Testing reCAPTCHA integration">
  <main class="pt-20">
    <div class="container mx-auto px-4 py-16">
      <h1 class="text-3xl font-bold mb-8">reCAPTCHA Test Page</h1>
      
      <div class="max-w-md mx-auto bg-white p-8 rounded-lg shadow-lg">
        <h2 class="text-xl font-semibold mb-4">Test Form</h2>
        
        <form id="test-form" class="space-y-4">
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Email</label>
            <input type="email" id="email" name="email" required class="w-full px-4 py-3 border border-gray-300 rounded-lg">
          </div>
          
          <!-- reCAPTCHA Widget -->
          <div class="flex justify-center">
            <SimpleRecaptchaWidget 
              siteKey={getSiteKey('contact')}
              theme="light"
              size="normal"
              callback="onTestRecaptchaSuccess"
              'expired-callback'="onTestRecaptchaExpired"
              'error-callback'="onTestRecaptchaError"
            />
          </div>
          
          <button type="submit" class="w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-medium">
            Submit Test
          </button>
        </form>
        
        <div id="result" class="mt-4 p-4 bg-gray-100 rounded-lg hidden">
          <h3 class="font-semibold">Result:</h3>
          <p id="result-text"></p>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Test reCAPTCHA callbacks
  let testRecaptchaResponse: string | null = null;

  window.onTestRecaptchaSuccess = function(response: string) {
    testRecaptchaResponse = response;
    console.log('Test reCAPTCHA success:', response);
    document.getElementById('result')?.classList.remove('hidden');
    document.getElementById('result-text')!.textContent = `reCAPTCHA Success: ${response.substring(0, 20)}...`;
  };

  window.onTestRecaptchaExpired = function() {
    testRecaptchaResponse = null;
    console.log('Test reCAPTCHA expired');
    document.getElementById('result')?.classList.remove('hidden');
    document.getElementById('result-text')!.textContent = 'reCAPTCHA Expired';
  };

  window.onTestRecaptchaError = function() {
    testRecaptchaResponse = null;
    console.log('Test reCAPTCHA error');
    document.getElementById('result')?.classList.remove('hidden');
    document.getElementById('result-text')!.textContent = 'reCAPTCHA Error';
  };

  // Form submission
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('test-form');
    
    if (form) {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        if (!testRecaptchaResponse) {
          alert('Please complete the reCAPTCHA verification');
          return;
        }
        
        const formData = new FormData(form as HTMLFormElement);
        const email = formData.get('email');
        
        console.log('Form submitted:', { email, recaptchaResponse: testRecaptchaResponse });
        
        document.getElementById('result')?.classList.remove('hidden');
        document.getElementById('result-text')!.textContent = `Form submitted successfully! Email: ${email}`;
      });
    }
    
    // Debug reCAPTCHA loading
    console.log('Checking reCAPTCHA script...');
    setTimeout(() => {
      console.log('grecaptcha available:', typeof window.grecaptcha !== 'undefined');
      const recaptchaContainer = document.querySelector('.g-recaptcha');
      console.log('reCAPTCHA container:', recaptchaContainer);
      if (recaptchaContainer) {
        console.log('reCAPTCHA container HTML:', recaptchaContainer.outerHTML);
      }
    }, 2000);
  });
</script> 