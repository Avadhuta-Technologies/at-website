---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Cart - NovaPod.ai" description="Review your selected pod and packs">
  <div class="min-h-screen bg-gray-50 py-12 dark:bg-gray-900">
    <div class="mx-auto max-w-6xl px-4">
      <!-- Header -->
      <div class="mb-12 text-center">
        <h1 class="mb-4 text-4xl font-bold text-gray-900 dark:text-white">Your Cart</h1>
        <p class="text-xl text-gray-600 dark:text-gray-400">Review your selected pod and packs</p>
      </div>

      <div class="grid ">
        <!-- Cart Items -->
        <div class="lg:col-span-2">
          <div class="mb-8 rounded-xl bg-white p-8 shadow-lg dark:bg-gray-800">
            <div class="mb-6 flex items-center justify-between">
              <h2 class="mb-6 text-2xl font-bold text-gray-900 dark:text-white">Selected Items</h2>
              <button
                id="checkout-btn"
                class="transform rounded-xl bg-gradient-to-r from-blue-500 to-purple-600 px-6 py-4 font-semibold text-white shadow-lg transition-all duration-300 hover:scale-105 hover:from-blue-600 hover:to-purple-700 hover:shadow-xl disabled:cursor-not-allowed disabled:opacity-50"
                onclick="handleCheckout()"
                disabled
              >
                Start My Pod Journey
              </button>
            </div>

            <div id="cart-items" class="space-y-6">
              <!-- Cart items will be rendered here -->
            </div>

            <div id="empty-cart" class="hidden py-12 text-center">
              <div class="mb-4 text-gray-400">
                <svg
                  class="mx-auto h-16 w-16"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m6-5v6a2 2 0 01-2 2H9a2 2 0 01-2-2v-6m8 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v4.01"
                  ></path>
                </svg>
              </div>
              <h3 class="mb-2 text-lg font-semibold text-gray-600 dark:text-gray-400">
                Your cart is empty
              </h3>
              <p class="mb-6 text-gray-500 dark:text-gray-500">Add a pod to get started</p>
              <a
                href="/"
                class="rounded-lg bg-blue-500 px-6 py-3 font-semibold text-white transition-colors duration-300 hover:bg-blue-600"
              >
                Browse Pods
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Import cart service
    import { cartService } from '../services/CartService';

    // Cart management using the service
    async function loadCart() {
      const cartSummary = await cartService.getCartSummary();
      const cartItemsContainer = document.getElementById('cart-items');
      const emptyCartDiv = document.getElementById('empty-cart');
      const checkoutBtn = document.getElementById('checkout-btn');

      if (!cartItemsContainer || !emptyCartDiv || !checkoutBtn) {
        console.error('Required cart elements not found');
        return;
      }

      if (cartSummary.totalItems === 0) {
        cartItemsContainer.innerHTML = '';
        emptyCartDiv.classList.remove('hidden');
        checkoutBtn.disabled = true;
        return;
      }

      emptyCartDiv.classList.add('hidden');
      checkoutBtn.disabled = false;

      // Separate pods and packs
      const podItems = cartSummary.items.filter((item) => item.type === 'pod');
      const packItems = cartSummary.items.filter((item) => item.type === 'pack');

      let cartHTML = '';

      // Render Selected Pod section
      if (podItems.length > 0) {
        cartHTML += `
          <div class="mb-8">
            <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4 flex items-center">
              <span class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold mr-3">ðŸš€</span>
              Selected Pod
            </h3>
            <div class="space-y-4">
        `;

        podItems.forEach((item, index) => {
          const teamComposition = [
            '1 Full Stack Developer (4+ yrs) â€“ storefront, backend logic, integrations',
            '1 UI/UX Designer â€“ conversion-focused shopping experience',
            '0.5 QA & SEO Engineer â€“ quality, speed, and search optimization',
            'Project Lead / Architect (Shared) â€“ ecommerce strategy and tech guidance',
          ];

          cartHTML += `
            <div class="bg-white dark:bg-gray-700 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-600">
              <div class="flex items-start justify-between mb-4">
                <div class="flex items-center space-x-4">
                  <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold">
                    ðŸš€
                  </div>
                  <div>
                    <h3 class="text-xl font-bold text-gray-900 dark:text-white">${item.title}</h3>
                    <p class="text-sm text-gray-600 dark:text-gray-400">${item.description}</p>
                  </div>
                </div>
                <div class="flex items-center space-x-2">
                  <button 
                    onclick="showItemDetails('${item.id}', 'pod')"
                    class="text-blue-500 hover:text-blue-700 transition-colors duration-200 p-2"
                    title="View Details"
                  >
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                  </button>
                  <button 
                    onclick="removeFromCart(${cartSummary.items.indexOf(item)})"
                    class="text-red-500 hover:text-red-700 transition-colors duration-200 p-2"
                    title="Remove"
                  >
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                  </button>
                </div>
              </div>
              
              <div class="grid md:grid-cols-2 gap-6 mb-4">
                <div>
                  <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Team Composition:</h4>
                  <ul class="space-y-1">
                    ${teamComposition
                      .map(
                        (member) => `
                      <li class="text-sm text-gray-600 dark:text-gray-400 flex items-center">
                        <span class="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
                        ${member}
                      </li>
                    `
                      )
                      .join('')}
                  </ul>
                </div>
                <div>
                  <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Reservation Period</h4>
                  <div class="flex items-center space-x-2">
                    <select 
                      onchange="updateReservationPeriod('${item.id}', this.value)"
                      class="text-sm border border-gray-300 rounded px-2 py-1"
                    >
                      <option value="1" ${
                        item.reservationMonths === 1 ? 'selected' : ''
                      }>1 Month</option>
                      <option value="2" ${
                        item.reservationMonths === 2 ? 'selected' : ''
                      }>2 Months</option>
                      <option value="3" ${
                        item.reservationMonths === 3 ? 'selected' : ''
                      }>3 Months</option>
                      <option value="6" ${
                        item.reservationMonths === 6 ? 'selected' : ''
                      }>6 Months</option>
                      <option value="12" ${
                        item.reservationMonths === 12 ? 'selected' : ''
                      }>12 Months</option>
                    </select>
                  </div>
                </div>
              </div>
              
              <div class="border-t border-gray-200 dark:border-gray-600 pt-4">
                <div class="text-right">
                  <p class="text-lg font-bold text-gray-900 dark:text-white">${item.price}</p>
                </div>
              </div>
            </div>
          `;
        });

        cartHTML += `
            </div>
          </div>
        `;
      }

      // Render Selected Packs section
      if (packItems.length > 0) {
        cartHTML += `
          <div class="mb-8">
            <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4 flex items-center">
              <span class="w-8 h-8 bg-gradient-to-r from-green-500 to-blue-600 rounded-lg flex items-center justify-center text-white font-bold mr-3">ðŸ“¦</span>
              Selected Packs
            </h3>
            <div class="space-y-4">
        `;

        packItems.forEach((item) => {
          cartHTML += `
            <div class="bg-white dark:bg-gray-700 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-600">
              <div class="flex items-start justify-between mb-4">
                <div class="flex items-center space-x-4">
                  <div class="w-12 h-12 bg-gradient-to-r from-green-500 to-blue-600 rounded-lg flex items-center justify-center text-white font-bold">
                    ${item.icon || 'ðŸ“¦'}
                  </div>
                  <div>
                    <h3 class="text-xl font-bold text-gray-900 dark:text-white">${item.title}</h3>
                    <p class="text-sm text-gray-600 dark:text-gray-400">${item.description}</p>
                  </div>
                </div>
                <div class="flex items-center space-x-2">
                  <button 
                    onclick="showItemDetails('${item.id}', 'pack')"
                    class="text-blue-500 hover:text-blue-700 transition-colors duration-200 p-2"
                    title="View Details"
                  >
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                  </button>
                  <button 
                    onclick="removeFromCart(${cartSummary.items.indexOf(item)})"
                    class="text-red-500 hover:text-red-700 transition-colors duration-200 p-2"
                    title="Remove"
                  >
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                  </button>
                </div>
              </div>
              
              <div class="grid md:grid-cols-2 gap-6 mb-4">
                <div>
                  <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Duration</h4>
                  <p class="text-sm text-gray-600 dark:text-gray-400">${item.duration}</p>
                </div>
                <div>
                  <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Add-on Pack</h4>
                  <p class="text-sm text-gray-600 dark:text-gray-400">Enhancement for your pod</p>
                </div>
              </div>
              
              <div class="border-t border-gray-200 dark:border-gray-600 pt-4">
                <div class="text-right">
                  <p class="text-lg font-bold text-gray-900 dark:text-white">${item.price}</p>
                </div>
              </div>
            </div>
          `;
        });

        cartHTML += `
            </div>
          </div>
        `;
      }

      cartItemsContainer.innerHTML = cartHTML;
    }

    async function removeFromCart(index) {
      await cartService.removeItem(index);
      loadCart();
    }

    async function updateReservationPeriod(podId, months) {
      const success = await cartService.updatePodReservation(podId, parseInt(months));
      if (success) {
        loadCart();
        cartService.showNotification('Reservation period updated!');
      }
    }

    async function showItemDetails(itemId, type) {
      let item;
      if (type === 'pod') {
        item = await cartService.getPodDetails(itemId);
      } else {
        item = await cartService.getPackDetails(itemId);
      }

      if (item) {
        showModal(item, type);
      }
    }

    function showModal(item, type) {
      // Create detailed modal HTML based on item type
      let modalContent = '';

      if (type === 'pod') {
        const teamComposition = [
          '1 Full Stack Developer (4+ yrs) â€“ storefront, backend logic, integrations',
          '1 UI/UX Designer â€“ conversion-focused shopping experience',
          '0.5 QA & SEO Engineer â€“ quality, speed, and search optimization',
          'Project Lead / Architect (Shared) â€“ ecommerce strategy and tech guidance',
        ];

        modalContent = `
          <div class="space-y-4">
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Description</h4>
              <p class="text-gray-600 dark:text-gray-400">${item.description}</p>
            </div>
            
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Team Composition</h4>
              <ul class="space-y-1">
                ${teamComposition
                  .map(
                    (member) => `
                  <li class="text-sm text-gray-600 dark:text-gray-400 flex items-center">
                    <span class="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
                    ${member}
                  </li>
                `
                  )
                  .join('')}
              </ul>
            </div>
            
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Reservation Period</h4>
              <p class="text-gray-600 dark:text-gray-400">${item.reservationMonths || 3} months</p>
            </div>
            
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Pricing</h4>
              <p class="text-lg font-bold text-gray-900 dark:text-white">${item.price}</p>
              ${item.priceUSD ? `<p class="text-sm text-gray-500">${item.priceUSD}</p>` : ''}
            </div>
            
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white mb-2">What You Get</h4>
              <ul class="space-y-1">
                <li class="text-sm text-gray-600 dark:text-gray-400">âœ“ Custom storefront (Next.js, Nuxt, or Shopify/Shopware)</li>
                <li class="text-sm text-gray-600 dark:text-gray-400">âœ“ Cart, checkout, discount engine, and payment gateway integration</li>
                <li class="text-sm text-gray-600 dark:text-gray-400">âœ“ Admin panel for orders, inventory, returns</li>
                <li class="text-sm text-gray-600 dark:text-gray-400">âœ“ Loyalty, referral, and coupon modules</li>
                <li class="text-sm text-gray-600 dark:text-gray-400">âœ“ SEO optimization, Google Shopping, and analytics integration</li>
              </ul>
            </div>
          </div>
        `;
      } else {
        modalContent = `
          <div class="space-y-4">
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Description</h4>
              <p class="text-gray-600 dark:text-gray-400">${item.description}</p>
            </div>
            
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Duration</h4>
              <p class="text-gray-600 dark:text-gray-400">${item.duration}</p>
            </div>
            
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Pricing</h4>
              <p class="text-lg font-bold text-gray-900 dark:text-white">${item.price}</p>
            </div>
            
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white mb-2">What's Included</h4>
              <ul class="space-y-1">
                <li class="text-sm text-gray-600 dark:text-gray-400">âœ“ Professional implementation</li>
                <li class="text-sm text-gray-600 dark:text-gray-400">âœ“ Quality testing</li>
                <li class="text-sm text-gray-600 dark:text-gray-400">âœ“ Documentation</li>
                <li class="text-sm text-gray-600 dark:text-gray-400">âœ“ Support during implementation</li>
              </ul>
            </div>
          </div>
        `;
      }

      // Create modal HTML
      const modalHTML = `
        <div id="item-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div class="bg-white dark:bg-gray-800 rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div class="flex justify-between items-start mb-4">
              <div>
                <h3 class="text-xl font-bold text-gray-900 dark:text-white">${item.title}</h3>
                <p class="text-sm text-gray-500 mt-1">${
                  type === 'pod' ? 'Development Pod' : 'Add-on Pack'
                }</p>
              </div>
              <button onclick="closeModal()" class="text-gray-500 hover:text-gray-700">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
              </button>
            </div>
            ${modalContent}
          </div>
        </div>
      `;

      // Add modal to page
      document.body.insertAdjacentHTML('beforeend', modalHTML);
    }

    function closeModal() {
      const modal = document.getElementById('item-modal');
      if (modal) {
        modal.remove();
      }
    }

    async function handleCheckout() {
      if (await cartService.isEmpty()) {
        alert('Your cart is empty');
        return;
      }

      // Redirect to checkout page
      window.location.href = '/checkout';
    }

    // Make functions globally available
    window.removeFromCart = removeFromCart;
    window.handleCheckout = handleCheckout;
    window.updateReservationPeriod = updateReservationPeriod;
    window.showItemDetails = showItemDetails;
    window.closeModal = closeModal;

    // Load cart on page load
    document.addEventListener('DOMContentLoaded', () => {
      loadCart();
    });
  </script>
</Layout>

