---
import Layout from '../../layouts/Layout.astro';
import { catalogUtils } from '../../content/catalog/_index.js';

export async function getStaticPaths() {
  const { packs } = catalogUtils.getAllProducts();
  return packs.map((pack) => ({
    params: { slug: pack.id },
    props: { pack },
  }));
}

const { pack } = Astro.props;
---

<Layout title={`${pack.title} - Pack Details`} description={pack.description}>
  <!-- Add class to body for dark header -->
  <script>
    document.body.classList.add('dark-header-page');
  </script>
  
  <!-- Hero Section -->
  <section class="relative  overflow-hidden">

    <div class="relative z-10 container mx-auto px-4 py-20 md:py-32">
      <div class="max-w-4xl mx-auto text-center">
        
        <!-- Badge -->
        <div class="inline-flex items-center px-4 py-2 bg-primary-50 text-primary-700 text-sm font-semibold rounded-full mb-8 border border-primary-200">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
          </svg>
          {pack.badge}
        </div>
        
        <!-- Main Headline -->
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-6 leading-tight">
          {pack.title}
        </h1>
        
        <!-- Subtitle -->
        <h2 class="text-xl md:text-2xl text-gray-600 mb-8 leading-relaxed max-w-3xl mx-auto">
          {pack.description}
        </h2>
        
        <!-- CTA Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center items-center mb-8">
          <a href="#pricing" class="inline-flex items-center px-6 py-3 bg-primary-600 text-white font-semibold rounded-lg hover:bg-primary-700 transition-colors duration-200 group">
            <span>{pack.cta.primaryButton}</span>
            <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
            </svg>
          </a>
          <a href="/contact" class="inline-flex items-center px-6 py-3 bg-white text-gray-700 font-semibold rounded-lg border border-gray-300 hover:bg-gray-50 transition-colors duration-200 group">
            <span>{pack.cta.secondaryButton}</span>
            <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
            </svg>
          </a>
        </div>
        
        <!-- Stats -->
        <div class="flex items-center justify-center space-x-8 text-gray-500 text-sm">
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2 text-green-500" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
            </svg>
            4.9/5 Rating
          </div>
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2 text-green-500" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
            </svg>
            98% Success Rate
          </div>
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2 text-green-500" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
            </svg>
            {pack.duration} Delivery
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- What's Included Section -->
  <section class="py-20 " id="included">
    <div class="container mx-auto px-4">
      <!-- Section Header -->
      <div class="max-w-3xl mx-auto text-center mb-16">
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4 gradient-title">What's Included</h2>
        <p class="text-lg text-gray-600 leading-relaxed">Everything you need for a successful outcome</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
        {pack.deliverables.map((item) => (
          <div class="group bg-white rounded-xl border border-gray-200 shadow-sm hover:shadow-md transition-all duration-300 hover:-translate-y-1">
            <div class="p-6">
              <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-green-50 rounded-lg flex items-center justify-center mr-4">
                  <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                </div>
                <span class="font-semibold text-gray-900 text-lg">{item.split(' - ')[0]}</span>
              </div>
              <p class="text-gray-600 leading-relaxed">{item.split(' - ')[1]}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Add-Ons Section -->
  {pack.addOns && pack.addOns.length > 0 && (
    <section class="py-16 ">
      <div class="container mx-auto px-4">
        <div class="text-center mb-12">
          <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900 gradient-title">Add-Ons You Can Include</h2>
          <p class="text-lg text-gray-600">Customize your pack for even more value</p>
        </div>
        <div class="flex flex-wrap justify-center gap-4">
          {pack.addOns.map((addon) => (
            <span class="inline-block bg-blue-100 text-blue-700 px-4 py-2 rounded-full font-semibold text-sm shadow-sm">{addon}</span>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Who It's For Section -->
  <section class="py-16 ">
    <div class="container mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900 gradient-title">Who It's For</h2>
        <p class="text-lg text-gray-600">Is this pack the right fit for you?</p>
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 max-w-6xl mx-auto">
        {pack.idealFor.map((item) => (
          <div class="bg-gradient-to-br from-blue-50 to-purple-50 rounded-2xl p-8 border border-blue-200 text-center font-semibold text-blue-900 shadow-sm">{item}</div>
        ))}
      </div>
    </div>
  </section>

  <!-- Why This Pack Works Section -->
  <section class="py-16 ">
    <div class="container mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900 gradient-title">Why This Pack Works</h2>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">{pack.whyItWorks}</p>
      </div>
    </div>
  </section>

  <!-- Testimonials Section -->
  {pack.testimonials && pack.testimonials.length > 0 && (
    <section class="py-16">
      <div class="container mx-auto px-4">
        <div class="text-center mb-12">
          <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900 gradient-title">Testimonials</h2>
          <p class="text-lg text-gray-600">What our customers say</p>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto">
          {pack.testimonials.map((t) => (
            <div class="bg-gradient-to-br from-green-50 to-blue-50 rounded-2xl p-8 border border-green-200 shadow-md">
              <p class="text-lg text-gray-800 italic mb-4">"{t.quote}"</p>
              <div class="font-bold text-blue-900">{t.author}</div>
              <div class="text-sm text-gray-500">{t.role}</div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Pricing & CTA Section -->
  <section class="py-16 " id="pricing">
    <div class="container mx-auto px-4">
      <div class="max-w-2xl mx-auto text-center">
        <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gray-900 gradient-title">Investment & ROI</h2>
        <p class="text-lg text-gray-600 mb-8">Transparent pricing, no surprises</p>
        <div class="bg-white rounded-2xl shadow-2xl p-8 mb-8">
          <div class="text-4xl font-bold text-gray-900 mb-2">{pack.priceINR} <span class="text-lg text-gray-400">({pack.priceUSD})</span></div>
          <div class="text-gray-600 mb-4">{pack.duration} delivery</div>
          <div class="inline-flex items-center px-4 py-2 bg-green-100 text-green-800 rounded-full text-sm font-semibold mb-4">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
            Best Value Guarantee
          </div>
          <div class="flex flex-col sm:flex-row gap-4 justify-center mt-4">
            <a href="/contact" class="px-8 py-4 bg-gradient-to-r from-blue-500 to-purple-600 text-white font-semibold rounded-xl hover:from-blue-600 hover:to-purple-700 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl">{pack.cta.primaryButton}</a>
            <a href="/contact" class="px-8 py-4 border-2 border-blue-500 text-blue-600 font-semibold rounded-xl hover:bg-blue-50 transition-all duration-300">{pack.cta.secondaryButton}</a>
          </div>
        </div>
        <p class="text-sm text-gray-500">âš¡ Fast delivery â€¢ ðŸ”’ Secure payment â€¢ ðŸ“ž 24/7 support</p>
      </div>
    </div>
  </section>
</Layout>

<style>
  .animate-fade-in { animation: fadeIn 0.6s ease-out; }
  .animate-fade-in-up { animation: fadeInUp 0.8s ease-out; }
  .animation-delay-200 { animation-delay: 0.2s; }
  .animation-delay-400 { animation-delay: 0.4s; }
  .animation-delay-600 { animation-delay: 0.6s; }
  @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
  @keyframes fadeInUp { from { opacity: 0; transform: translateY(30px); } to { opacity: 1; transform: translateY(0); } }
</style> 