---
import Layout from '../layouts/Layout.astro';
import Breadcrumb from '../components/layout/Breadcrumb.astro';
---

<Layout description="Complete your NovaPod.ai order - Review and finalize your selected pods and packs." title="Checkout | NovaPod.ai">

  <Breadcrumb 
    title="Checkout"
    subtitle="Complete your order"
  />

  <!-- Checkout Section -->
  <section class="py-16 bg-gradient-to-br from-gray-50 to-blue-50 dark:from-dark-2 dark:to-dark-3">
    <div class="container mx-auto px-4">
      <div class="max-w-6xl mx-auto">
        
        <!-- Checkout Header -->
        <div class="mb-8">
          <h1 class="text-3xl md:text-4xl font-bold text-dark dark:text-white mb-2">Complete Your Order</h1>
          <p class="text-gray-600 dark:text-gray-400">Review your items and provide your information</p>
        </div>

        <!-- Checkout Content -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
          
          <!-- Order Summary -->
          <div class="lg:col-span-2">
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 mb-6">
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Order Summary</h3>
              
              <div id="checkout-items" class="space-y-4 mb-6">
                <!-- Items will be populated by JavaScript -->
              </div>
              
              <div class="border-t border-gray-200 dark:border-gray-700 pt-4">
                <div class="flex justify-between items-center text-lg font-semibold text-gray-900 dark:text-white">
                  <span>Total</span>
                  <span id="checkout-total">₹0</span>
                </div>
                <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">All prices in INR</p>
              </div>
            </div>

            <!-- Customer Information Form -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-6">Customer Information</h3>
              
              <form id="checkout-form" class="space-y-6">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label for="firstName" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">First Name*</label>
                    <input type="text" id="firstName" name="firstName" required
                      class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                  </div>
                  <div>
                    <label for="lastName" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Last Name*</label>
                    <input type="text" id="lastName" name="lastName" required
                      class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                  </div>
                </div>
                
                <div>
                  <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Email*</label>
                  <input type="email" id="email" name="email" required
                    class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                </div>
                
                <div>
                  <label for="phone" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Phone*</label>
                  <input type="tel" id="phone" name="phone" required
                    class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                </div>
                
                <div>
                  <label for="company" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Company</label>
                  <input type="text" id="company" name="company"
                    class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                </div>
                
                <div>
                  <label for="projectDetails" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Project Details*</label>
                  <textarea id="projectDetails" name="projectDetails" rows="4" required
                    placeholder="Tell us about your project requirements, timeline, and any specific needs..."
                    class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white resize-none"></textarea>
                </div>
              </form>
            </div>
          </div>

          <!-- Order Summary Sidebar -->
          <div class="lg:col-span-1">
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 sticky top-24">
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Order Details</h3>
              
              <!-- Summary Items -->
              <div id="summary-items" class="space-y-3 mb-6">
                <!-- Summary items will be populated by JavaScript -->
              </div>

              <!-- Total -->
              <div class="border-t border-gray-200 dark:border-gray-700 pt-4 mb-6">
                <div class="flex justify-between items-center text-lg font-semibold text-gray-900 dark:text-white">
                  <span>Total</span>
                  <span id="summary-total">₹0</span>
                </div>
                <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">All prices in INR</p>
              </div>

              <!-- Place Order Button -->
              <button id="place-order-btn" class="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white font-semibold py-3 px-6 rounded-lg hover:from-blue-600 hover:to-purple-700 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                Place Order
              </button>

              <!-- Additional Info -->
              <div class="mt-4 text-sm text-gray-600 dark:text-gray-400">
                <p class="mb-2">✓ Secure checkout</p>
                <p class="mb-2">✓ 30-day money-back guarantee</p>
                <p class="mb-2">✓ Free consultation included</p>
                <p>✓ No hidden fees</p>
              </div>
            </div>
          </div>

        </div>

      </div>
    </div>
  </section>

</Layout>

<script>
  // Checkout functionality
  class Checkout {
    constructor() {
      this.items = this.loadCart();
      this.init();
    }

    loadCart() {
      if (typeof window !== 'undefined') {
        const saved = localStorage.getItem('novapod-cart');
        return saved ? JSON.parse(saved) : [];
      }
      return [];
    }

    getTotal() {
      return this.items.reduce((total, item) => {
        const price = this.parsePrice(item.price);
        return total + (price * item.quantity);
      }, 0);
    }

    parsePrice(price) {
      if (typeof price === 'number') return price;
      if (typeof price === 'string') {
        const match = price.match(/[\d.]+/);
        return match ? parseFloat(match[0]) * 100000 : 0;
      }
      return 0;
    }

    formatPrice(amount) {
      if (amount >= 100000) {
        return `₹${(amount / 100000).toFixed(1)}L`;
      } else if (amount >= 1000) {
        return `₹${(amount / 1000).toFixed(0)}K`;
      }
      return `₹${amount.toFixed(0)}`;
    }

    render() {
      const checkoutItems = document.getElementById('checkout-items');
      const summaryItems = document.getElementById('summary-items');
      const checkoutTotal = document.getElementById('checkout-total');
      const summaryTotal = document.getElementById('summary-total');
      const placeOrderBtn = document.getElementById('place-order-btn');

      if (this.items.length === 0) {
        // Redirect to cart if empty
        window.location.href = '/cart';
        return;
      }

      // Render checkout items
      checkoutItems.innerHTML = this.items.map(item => `
        <div class="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
          <div class="flex-1">
            <h4 class="font-semibold text-gray-900 dark:text-white">${item.title}</h4>
            <p class="text-sm text-gray-600 dark:text-gray-400">${item.type === 'pod' ? 'Pod' : 'Pack'}</p>
          </div>
          <div class="text-right">
            <div class="font-semibold text-gray-900 dark:text-white">${item.price}</div>
            <div class="text-sm text-gray-600 dark:text-gray-400">Qty: ${item.quantity}</div>
          </div>
        </div>
      `).join('');

      // Render summary items
      summaryItems.innerHTML = this.items.map(item => `
        <div class="flex justify-between items-center">
          <span class="text-gray-600 dark:text-gray-400">${item.title} × ${item.quantity}</span>
          <span class="font-medium text-gray-900 dark:text-white">${item.price}</span>
        </div>
      `).join('');

      // Update totals
      const total = this.getTotal();
      checkoutTotal.textContent = this.formatPrice(total);
      summaryTotal.textContent = this.formatPrice(total);
      placeOrderBtn.disabled = false;
    }

    placeOrder() {
      const form = document.getElementById('checkout-form');
      if (!form) return;

      const formData = new FormData(form);
      const orderData = {
        items: this.items,
        customer: {
          firstName: formData.get('firstName'),
          lastName: formData.get('lastName'),
          email: formData.get('email'),
          phone: formData.get('phone'),
          company: formData.get('company'),
          projectDetails: formData.get('projectDetails')
        },
        total: this.getTotal(),
        orderDate: new Date().toISOString()
      };

      // Store order data
      localStorage.setItem('novapod-order', JSON.stringify(orderData));
      
      // Clear cart
      localStorage.removeItem('novapod-cart');
      
      // Redirect to order confirmation
      window.location.href = '/order-confirmation';
    }

    init() {
      this.render();
      
      // Add event listeners
      document.getElementById('place-order-btn')?.addEventListener('click', () => {
        this.placeOrder();
      });
    }
  }

  // Initialize checkout
  let checkout;
  if (typeof window !== 'undefined') {
    checkout = new Checkout();
  }
</script> 