---
import Layout from '../layouts/Layout.astro';
import Breadcrumb from '../components/layout/Breadcrumb.astro';
import ExplorePodsHeroSection from '../components/explore-pods/ExplorePodsHeroSection.astro';
import ExploreAvailablePodsSection from '../components/explore-pods/ExploreAvailablePodsSection.astro';
import ExplorePodsWhyChooseSection from '../components/explore-pods/ExplorePodsWhyChooseSection.astro';
import ExplorePodsFAQSection from '../components/explore-pods/ExplorePodsFAQSection.astro';
import ExplorePodsCTASection from '../components/explore-pods/ExplorePodsCTASection.astro';
import { explorePodsFAQData } from '../content/explore-pods/_index.js';

// Import isolated explore-pods content
import {
  explorePodsHeroData,
  exploreAvailablePodsData,
  explorePodsWhyChooseData,
} from '../content/explore-pods/_index.js';
import ExploreCustomPodSection from '../components/explore-pods/ExploreCustomPodSection.astro';
---

<Layout
  description="Explore our specialized development pods. Find the perfect team for your project with our AI/ML, ecommerce, mobile, and product launch pods."
  title="Explore Pods | NovaPod.ai"
>
  <!-- Hero Section -->
  <ExplorePodsHeroSection data={explorePodsHeroData} />

  <!-- Why Choose Section -->
  <ExplorePodsWhyChooseSection data={explorePodsWhyChooseData} />

  <!-- Pods Section -->
  <ExploreAvailablePodsSection data={exploreAvailablePodsData} />

  <!-- Custom Pod Section -->
  <ExploreCustomPodSection />

  <!-- FAQ Section -->
  <ExplorePodsFAQSection data={explorePodsFAQData} />

  <!-- CTA Section -->
  <ExplorePodsCTASection />
</Layout>

<script>
  // Global event handler for pod CTA buttons and data-add-to-cart buttons
  document.addEventListener('DOMContentLoaded', function() {
    document.addEventListener('click', async function(e) {
      // Handle dynamic pod CTA buttons
      if (e.target && (e.target as HTMLElement).matches('.pod-cta-btn')) {
        e.preventDefault();
        
        const button = e.target as HTMLElement;
        const action = button.getAttribute('data-action');
        const podId = button.getAttribute('data-pod-id');
        
        console.log('üîç [ExplorePods] Pod CTA button clicked:', { action, podId });
        
        try {
          // Import the summaryShared utility
          const { SummaryShared } = await import('../utils/summaryShared.js');
          const shared = new SummaryShared();
          
          if (action === 'add') {
            // Add pod to cart
            const success = await shared.selectPod(podId);
            if (success) {
              console.log('Pod added to cart successfully');
            }
          } else if (action === 'remove') {
            // Remove pod from cart
            const success = await shared.removePod();
            if (success) {
              console.log('Pod removed from cart successfully');
            }
          }
        } catch (error) {
          console.error('Error handling pod CTA button:', error);
        }
      }
      
      // Handle regular data-add-to-cart buttons (fallback)
      if (e.target && (e.target as HTMLElement).matches('[data-add-to-cart]')) {
        e.preventDefault();
        
        const button = e.target as HTMLElement;
        const itemType = button.dataset?.itemType;
        
        if (itemType === 'pod') {
          const podId = button.dataset?.itemId;
          
          try {
            // Import the summaryShared utility
            const { SummaryShared } = await import('../utils/summaryShared.js');
            const shared = new SummaryShared();
            
            // Add pod to cart
            const success = await shared.selectPod(podId);
            if (success) {
              console.log('Pod added to cart successfully via data-add-to-cart');
            }
          } catch (error) {
            console.error('Error handling data-add-to-cart button:', error);
          }
        }
      }
    });
  });
</script>

