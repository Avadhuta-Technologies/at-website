---
import Layout from '../layouts/Layout.astro';
import Breadcrumb from '../components/layout/Breadcrumb.astro';
import ExplorePodsHeroSection from '../components/explore-pods/ExplorePodsHeroSection.astro';
import ExploreAvailablePodsSection from '../components/explore-pods/ExploreAvailablePodsSection.astro';
import ExplorePodsWhyChooseSection from '../components/explore-pods/ExplorePodsWhyChooseSection.astro';
import ExplorePodsFAQSection from '../components/explore-pods/ExplorePodsFAQSection.astro';
import ExplorePodsCTASection from '../components/explore-pods/ExplorePodsCTASection.astro';
import { explorePodsFAQData } from '../content/explore-pods/_index.js';

// Import isolated explore-pods content
import {
  explorePodsHeroData,
  exploreAvailablePodsData,
  explorePodsWhyChooseData,
} from '../content/explore-pods/_index.js';
import ExploreCustomPodSection from '../components/explore-pods/ExploreCustomPodSection.astro';

// Generate comprehensive meta information for the explore pods page
const generateMetaInfo = () => {
  const title = "Explore Development Pods - AI/ML, Ecommerce, Mobile & More | NovaPod AI";
  const description = "Explore our specialized development pods. Find the perfect team for your project with our AI/ML, ecommerce, mobile, and product launch pods. Starting at ‚Çπ2.5L/month.";
  
  // Generate keywords based on explore pods page content
  const keywords = [
    'development pods',
    'AI ML development pod',
    'ecommerce development pod',
    'mobile development pod',
    'product launch pod',
    'dedicated development team',
    'custom development pods',
    'startup development pods',
    'enterprise development pods',
    'NovaPod AI pods',
    'development team services',
    'specialized development pods'
  ].join(', ');
  
  // Use NovaPod AI logo for consistent branding
  const image = '/assets/logo/novapod_ai_logo.svg';
  const imageAlt = 'Explore Development Pods - NovaPod AI';
  
  // Generate canonical URL
  const canonicalUrl = 'https://novapod.ai/explore-pods';
  
  return {
    title,
    description,
    keywords,
    image,
    imageAlt,
    canonicalUrl
  };
};

const metaInfo = generateMetaInfo();
---

<Layout 
  title={metaInfo.title}
  description={metaInfo.description}
  image={metaInfo.image}
>
  <!-- Enhanced Meta Tags for SEO -->
  <meta name="keywords" content={metaInfo.keywords} />
  <meta name="author" content="NovaPod AI" />
  <meta name="robots" content="index, follow" />
  <link rel="canonical" href={metaInfo.canonicalUrl} />
  
  <!-- Enhanced Open Graph Tags -->
  <meta property="og:title" content={metaInfo.title} />
  <meta property="og:description" content={metaInfo.description} />
  <meta property="og:type" content="website" />
  <meta property="og:url" content={metaInfo.canonicalUrl} />
  <meta property="og:image" content={metaInfo.image} />
  <meta property="og:image:alt" content={metaInfo.imageAlt} />
  <meta property="og:image:width" content="1200" />
  <meta property="og:image:height" content="630" />
  <meta property="og:site_name" content="NovaPod AI" />
  <meta property="og:locale" content="en_US" />
  
  <!-- Enhanced Twitter Card Tags -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={metaInfo.title} />
  <meta name="twitter:description" content={metaInfo.description} />
  <meta name="twitter:image" content={metaInfo.image} />
  <meta name="twitter:image:alt" content={metaInfo.imageAlt} />
  <meta name="twitter:site" content="@novapod_ai" />
  <meta name="twitter:creator" content="@novapod_ai" />
  
  <!-- Additional Meta Tags -->
  <meta name="application-name" content="NovaPod AI" />
  <meta name="apple-mobile-web-app-title" content="NovaPod AI" />
  <meta name="apple-mobile-web-app-capable" content="yes" />
  <meta name="apple-mobile-web-app-status-bar-style" content="default" />
  
  <!-- Structured Data for Rich Snippets -->
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "WebPage",
    "name": "Explore Development Pods",
    "description": metaInfo.description,
    "url": metaInfo.canonicalUrl,
    "mainEntity": {
      "@type": "ItemList",
      "name": "Development Pods",
      "description": "Specialized development pods for different project types",
      "itemListElement": [
        {
          "@type": "Service",
          "name": "AI/ML Development Pod",
          "description": "Dedicated team for AI and machine learning projects"
        },
        {
          "@type": "Service",
          "name": "Ecommerce Development Pod",
          "description": "Specialized team for ecommerce platform development"
        },
        {
          "@type": "Service",
          "name": "Mobile Development Pod",
          "description": "Dedicated team for mobile app development"
        },
        {
          "@type": "Service",
          "name": "Product Launch Pod",
          "description": "Complete team for product launch and go-to-market"
        }
      ]
    }
  })} />

  <!-- Hero Section -->
  <ExplorePodsHeroSection data={explorePodsHeroData} />

  <!-- Why Choose Section -->
  <ExplorePodsWhyChooseSection data={explorePodsWhyChooseData} />

  <!-- Pods Section -->
  <ExploreAvailablePodsSection data={exploreAvailablePodsData} />

  <!-- Custom Pod Section -->
  <ExploreCustomPodSection />

  <!-- FAQ Section -->
  <ExplorePodsFAQSection data={explorePodsFAQData} />

  <!-- CTA Section -->
  <ExplorePodsCTASection />
</Layout>

<script>
  // Global event handler for pod CTA buttons and data-add-to-cart buttons
  document.addEventListener('DOMContentLoaded', function() {
    document.addEventListener('click', async function(e) {
      // Handle dynamic pod CTA buttons
      if (e.target && (e.target as HTMLElement).matches('.pod-cta-btn')) {
        e.preventDefault();
        
        const button = e.target as HTMLElement;
        const action = button.getAttribute('data-action');
        const podId = button.getAttribute('data-pod-id');
        
        console.log('üîç [ExplorePods] Pod CTA button clicked:', { action, podId });
        
        try {
          // Import the summaryShared utility
          const { SummaryShared } = await import('../utils/summaryShared.js');
          const shared = new SummaryShared();
          
          if (action === 'add') {
            // Add pod to cart with confirmation if replacing
            const selectedPod = await shared.selectPodWithConfirmation(podId);
            if (selectedPod) {
              console.log('Pod added to cart successfully');
              // Navigate to summary page after successful pod reservation
              window.location.href = '/summary?step=1';
            }
          } else if (action === 'remove') {
            // Remove pod from cart
            const success = await shared.removePod();
            if (success) {
              console.log('Pod removed from cart successfully');
            }
          }
        } catch (error) {
          console.error('Error handling pod CTA button:', error);
        }
      }
      
      // Handle regular data-add-to-cart buttons (fallback)
      if (e.target && (e.target as HTMLElement).matches('[data-add-to-cart]')) {
        e.preventDefault();
        
        const button = e.target as HTMLElement;
        const itemType = button.dataset?.itemType;
        
        if (itemType === 'pod') {
          const podId = button.dataset?.itemId;
          
          try {
            // Import the summaryShared utility
            const { SummaryShared } = await import('../utils/summaryShared.js');
            const shared = new SummaryShared();
            
            // Add pod to cart with confirmation if replacing
            const selectedPod = await shared.selectPodWithConfirmation(podId);
            if (selectedPod) {
              console.log('Pod added to cart successfully via data-add-to-cart');
              // Navigate to summary page after successful pod reservation
              window.location.href = '/summary?step=1';
            }
          } catch (error) {
            console.error('Error handling data-add-to-cart button:', error);
          }
        }
      }
    });
  });
</script>

