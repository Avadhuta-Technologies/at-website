---
import Layout from '../layouts/Layout.astro';
import Breadcrumb from '../components/layout/Breadcrumb.astro';
import HeroSection from '../components/sections/HeroSection.astro';
import WhyChooseSection from '../components/sections/WhyChooseSection.astro';
import FeaturesSection from '../components/sections/FeaturesSection.astro';
import PodsGridSection from '../components/sections/PodsGridSection.astro';
import FAQSection from '../components/sections/FAQSection.astro';
import CTASection from '../components/sections/CTASection.astro';
import { podsData } from '../content/pods.js';
---

<Layout description="Explore our on-demand tech teams and project pods." title="Explore Pods | NovaPod.ai">

  <HeroSection 
    badge={podsData.hero.badge}
    title={podsData.hero.title}
    subtitle={podsData.hero.subtitle}
    description={podsData.hero.description}
    stats={podsData.hero.stats}
  />

  <WhyChooseSection 
    title={podsData.whyChoose.title}
    cards={podsData.whyChoose.cards}
  />

  <FeaturesSection 
    title={podsData.included.title}
    image={podsData.included.image}
    items={podsData.included.items}
  />

  <PodsGridSection 
    title={podsData.availablePods.title}
    pods={podsData.availablePods.pods}
  />

  <FAQSection 
    title={podsData.faq.title}
    subtitle={podsData.faq.subtitle}
    items={podsData.faq.items}
  />

  <CTASection 
    title={podsData.cta.title}
    description={podsData.cta.description}
    buttonText={podsData.cta.buttonText}
    email={podsData.cta.email}
    downloadLink={podsData.cta.downloadLink}
  />

</Layout>

<style>
  /* Fade in animations */
  .animate-fade-in {
    animation: fadeIn 0.8s ease-out;
  }

  .animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-400 {
    animation-delay: 0.4s;
  }

  .animation-delay-600 {
    animation-delay: 0.6s;
  }

  .animation-delay-800 {
    animation-delay: 0.8s;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Enhanced hover effects */
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1);
  }

  .group:hover .group-hover\:rotate-3 {
    transform: rotate(3deg);
  }

  .group:hover .group-hover\:scale-150 {
    transform: scale(1.5);
  }

  /* Scroll-triggered animations */
  .scroll-animate {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease-out;
  }

  .scroll-animate.animate {
    opacity: 1;
    transform: translateY(0);
  }

  /* Card hover effects */
  .pod-card {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .pod-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  }

  /* Gradient animations */
  .gradient-animate {
    background-size: 200% 200%;
    animation: gradientShift 3s ease infinite;
  }

  @keyframes gradientShift {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Scroll-triggered animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate');
        }
      });
    }, observerOptions);

    // Observe all sections for scroll animations
    document.querySelectorAll('section').forEach((section, index) => {
      section.classList.add('scroll-animate');
      section.style.animationDelay = `${index * 0.2}s`;
      observer.observe(section);
    });

    // Enhanced card interactions
    document.querySelectorAll('.pod-card').forEach(card => {
      card.addEventListener('mouseenter', function(this: HTMLElement) {
        this.style.transform = 'translateY(-8px) scale(1.02)';
      });
      
      card.addEventListener('mouseleave', function(this: HTMLElement) {
        this.style.transform = 'translateY(0) scale(1)';
      });
    });

    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function(this: HTMLAnchorElement, e) {
        e.preventDefault();
        const href = this.getAttribute('href');
        if (href) {
          const target = document.querySelector(href);
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        }
      });
    });
  });
</script> 